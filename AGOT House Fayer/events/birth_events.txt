#############################################
#
# EVENTS FOR LOVE, PREGNANCY AND BIRTH
#
#############################################
# by Henrik Fåhraeus
#############################################

namespace = birth

# on_birth: Universal on birth event
character_event = {
	id = birth.990
	picture = GFX_evt_birth
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = { #Determine status (bastard, slave etc)
		#Child born to slave mother
		if = {
			limit = { 
				mother = { 
					trait = slave 
					liege = { 
						has_opinion_modifier = { who = PREV modifier = opinion_my_slave } 
						NOT = { crownlaw_title = { has_law = slavery_3 } } #NOT Thralldom
					}
				} 
			}
			#Owner is the father
			if = { 
				limit = {
					mother = { 
						liege = { 							
							ROOT = { father = { character = PREVPREV } }						
						} 
					}
				}
				father = { character_event = { id = slavery.403 days = 1 } }
				break = yes
			}
			# Under chattel slavery, slavery is inherited from the mother
			if = { 
				limit = {
					mother = { 
						liege = { 
							OR = {
								crownlaw_title = { has_law = slavery_2 }
								AND = {
									independent = yes
									NOT = { crownlaw_title = { always = yes } }
									NOT = { trait = nightswatch }
								}					
							}
						} 
					}
				}
				if = {
					limit = { father = { NOT = { any_spouse = { any_child = { character = ROOT } } } } }
					add_trait = bastard
					if = {
						limit = { NOT = { dynasty = 0 } }
						dynasty = mother_bastard
					}	
				}
				mother = {
					liege = { 
						character_event = { id = slavery.401 days = 1 }
					}		
				}						
				break = yes
			}
		}
		#Child born out of wedlock
		if = {
			limit = { was_conceived_a_bastard = yes  }
			if = { #Check for bug, where father is set incorrectly
				limit = { 
					real_father_even_if_dead = { always = yes }
					NOT = { father_even_if_dead = { always = yes } }
				}
				real_father_even_if_dead = { ROOT = { set_father = PREV } }
			}
			if = {
				limit = {  # There is no 'real_father' set, i.e. this is not a hidden, cuckoo bastard					
					OR = {
						AND = {
							NOT = { real_father_even_if_dead = { always = yes } }
							mother = { NOT = { has_character_flag = bastard_father_unknown } }
						}
						mother = { has_character_flag = flag_no_cuckoo } # The mother has decided to tell her husband about the affair
					}
				}
				character_event = { id = 300 }
				break = yes
			}
		}	
		#A bastard child is born, but is not recognized as such by the spouse of the mother
		if = {
			limit = {
				OR = {
					real_father = {
						is_alive = yes
						ROOT = {
							father_even_if_dead = {
								NOT = { character = PREVPREV }
							}
						}
					}
					mother = { has_character_flag = bastard_father_unknown }
				}	
				mother = { NOT = { has_character_flag = flag_no_cuckoo } }
			}
			set_character_flag = flag_secret_bastard
			# #Check for obvious bastards because of looks
			# if = {
				# limit = {	
					# mother = { NOT = { graphical_culture = ROOT } }
					# father_even_if_dead = { NOT = { graphical_culture = ROOT } }
				# }
				
			# }
			mother = {
				character_event = { id = 317 days = 1 } # The real father is notified
			}
		}
		#Consort
		if = {
			limit = { mother = { is_consort = yes } }
			character_event = { id = 312000 }
			break = yes
		}
		#Child of forbidden marriage is born
		if = {
			limit = {
				was_conceived_a_bastard = no
				mother = { has_character_flag = forbidden_marriage_spouse }
				father_even_if_dead = { trait = disinherited }
			}
			add_trait = disinherited
			break = yes
		}
		#Child of black brother
		if = {
			limit = {
				father_even_if_dead = { trait = nightswatch }
			}
			add_trait = bastard
			character_event = { id = 300 }
			break = yes
		}
	}
	
	option = { #Other genetics/events etc
		name = OK
		## Brindle Men big-boned half men
		if = {
			limit = {
				culture = brindlemen
				NOR = { 
					trait = ugly
					trait = strong
					trait = tall
					trait = slow
					trait = imbecile
				}
			}
			random_list = {
				40 = {
					add_trait = strong
					remove_trait = weak
				}
				20 = {
					add_trait = tall
					remove_trait = dwarf
				}
				20 = {
					add_trait = ugly
					remove_trait = fair
				}
				15 = {
					add_trait = slow
					remove_trait = imbecile
					remove_trait = quick
					remove_trait = genius
				}
				5 = {
					add_trait = imbecile
					remove_trait = slow
					remove_trait = quick
					remove_trait = genius
				}
			}
		}	
		##Lengi all high chance of being tall
		if = {
			limit = {
				culture = lengi
				NOT = { trait = tall }
				NOT = { trait = dwarf }
			}
			random_list = {
				75 = { add_trait = tall }
				25 = {}
			}
		}	
		##Naathi chance of being quick/fair
		if = {
			limit = {
				culture = naathi
			}
			if = {
				limit = {
					NOT = { trait = genius }
					NOT = { trait = quick }
					NOT = { trait = slow }
					NOT = { trait = imbecile }
					NOT = { trait = inbred }
				}
				random_list = {
					1 = { add_trait = genius }
					9 = { add_trait = quick }
					89 = {  }
				}
			}
			if = { 	
				limit = {	
					NOT = { trait = ugly }
					NOT = { trait = fair }
				}
				random = {
					chance = 20
					add_trait = fair
				}
			}
		}
		#High Valyrian
		if = {
			limit = {
				culture = high_valyrian
			}
			if = { 	
				limit = {	
					NOT = { trait = ugly }
					NOT = { trait = fair }
				}
				random = {
					chance = 20
					add_trait = fair
				}
			}
			remove_trait = inbred
		}	
		#Lysene
		if = {
			limit = {
				culture = lysene
			}
			if = { 	
				limit = {	
					NOT = { trait = ugly }
					NOT = { trait = fair }
				}
				random = {
					chance = 20
					add_trait = fair
				}
			}
		}
		##Ibbenese/Brindlemen/Giants cannot interbreed with regular men (neaderthals)
		if = {
			limit = {
				OR = {		
					real_father_even_if_dead = {
						OR = {
							culture = ibbenese 
							culture = brindlemen
							culture = giant
						}	
						ROOT = { mother = { NOT = { culture = PREVPREV } } }
					}
					AND = {		
						real_father_even_if_dead = { always = no }
						father_even_if_dead = { 
							OR = {
								culture = ibbenese 
								culture = brindlemen
								culture = giant
							}
							ROOT = { mother = { NOT = { culture = PREVPREV } } }
						}							
					}	
					mother = {
						OR = {
							culture = ibbenese 
							culture = brindlemen
							culture = giant
						}
						ROOT = { 
							OR = {
								real_father_even_if_dead = { NOT = { culture = PREVPREV } } 
								AND = {
									real_father_even_if_dead = { always = no }
									father_even_if_dead = { NOT = { culture = PREVPREV } } 
								}
							}	
						}			
					}
				}
			}
			fertility = -10
			random = {
				chance = 15
				add_trait = lunatic
			}
			random = {
				chance = 15
				add_trait = hunchback
			}
			random = {
				chance = 15
				add_trait = ugly
			}
			random = {
				chance = 15
				add_trait = sickly
			}
			random = {
				chance = 15
				add_trait = weak
			}
			random = {
				chance = 15
				add_trait = dwarf
			}
			random = {
				chance = 15
				add_trait = clubfooted
			}
			random = {
				chance = 15
				add_trait = slow
			}
			random = {
				chance = 15
				add_trait = imbecile
				remove_trait = slow
			}
			random = {
				chance = 15
				add_trait = harelip	
			}
			random = {
				chance = 15
				add_trait = scarred
			}
			if = {
				limit = {
					OR = {
						mother = {
							OR = {
								culture = ibbenese 
								culture = brindlemen
								culture = giant
							}
						}
						real_father_even_if_dead = { culture = giant }
						AND = {		
							real_father_even_if_dead = { always = no }
							father_even_if_dead = { culture = giant }							
						}
					}	
				}			
				set_character_flag = stillborn	
			}
		}
		#Make sure only correct characters are born with mark trait
		if = {
			limit = {
				trait = the_mark
				NOR = {
					culture = sisterman 
					father_even_if_dead = { culture = sisterman } 
					mother_even_if_dead = { culture = sisterman }
					real_father_even_if_dead = { culture = sisterman }
				}
			}
			remove_trait = the_mark
		}
		# A child whose mother successfully consumed the heart is born
		if = {
			limit = { mother = { has_character_flag = flag_stallion_heart_successful } }
			mother = { clr_character_flag = flag_stallion_heart_successful }
			#set_character_flag = flag_stallion_heart_bonus_applied
			# Very good chance of removing bad congenital traits
			remove_trait = sickly
			random = {
				chance = 30
				remove_trait = imbecile
			}
			random = {
				chance = 30
				remove_trait = slow
			}
			random = {
				chance = 30
				remove_trait = ugly
			}
			random = {
				chance = 30
				remove_trait = weak
			}
			random = {
				chance = 30
				remove_trait = dwarf
			}
			random = {
				chance = 30
				remove_trait = clubfooted
			}
			random = {
				chance = 30
				remove_trait = hunchback
			}
			random = {
				chance = 30
				remove_trait = harelip
			}
			random = {
				chance = 30
				remove_trait = lisp
			}
			random = {
				chance = 30
				remove_trait = stutter
			}
			random = {
				chance = 30
				remove_trait = inbred
			}
			
			# Weak chance of gaining good congenital traits
			random = {
				chance = 1
				add_trait = genius
			}
			random = {
				chance = 5
				if = {
					limit = { NOT = { trait = genius } }
					add_trait = quick
				}
			}
			random = {
				chance = 5
				add_trait = strong
			}
			random = {
				chance = 5
				add_trait = fair
			}
			random = {
				chance = 5
				add_trait = fair
			}
		}
		# A child whose mother failed to consume the heart is born
		if = {
			limit = { mother = { has_character_flag = flag_stallion_heart_failure } }
			mother = { clr_character_flag = flag_stallion_heart_failure }
			#set_character_flag = flag_stallion_heart_bonus_applied
			# Small chance of removing bad congenital traits
			remove_trait = sickly
			random = {
				chance = 10
				remove_trait = imbecile
			}
			random = {
				chance = 10
				remove_trait = slow
			}
			random = {
				chance = 10
				remove_trait = ugly
			}
			random = {
				chance = 10
				remove_trait = weak
			}
			random = {
				chance = 10
				remove_trait = dwarf
			}
			random = {
				chance = 10
				remove_trait = clubfooted
			}
			random = {
				chance = 10
				remove_trait = hunchback
			}
			random = {
				chance = 10
				remove_trait = harelip
			}
			random = {
				chance = 10
				remove_trait = lisp
			}
			random = {
				chance = 10
				remove_trait = stutter
			}
			random = {
				chance = 10
				remove_trait = inbred
			}
		}	
		# Bear trait
		if = {
			limit = {
				OR = {
					father_even_if_dead = { trait = not_a_bear }
					mother = { trait = not_a_bear }
				}
				is_female = no
				NOT = { trait = not_a_bear }
			}
			add_trait = not_a_bear
			set_graphical_culture = northman
		}
		# Cold Gods follower sacrifice son
		if = {
			limit = {
				father = {
					is_alive = yes
					religion = cold_gods
					NOT = { ROOT = { mother = { higher_tier_than = PREVPREV is_alive = yes } } }
				}
			}
			death = { death_reason = death_sacrificed }
			break = yes
		}
		#STILLBORN
		if = {
			limit = { mother = { has_character_flag = flag_stillbirth } }
			mother = { clr_character_flag = flag_stillbirth }
			if = { #If lovers both agree to moon tea expunge from records
				limit = { 
					mother = { 
						has_character_flag = flag_moon_tea 
						ROOT = {
							father = { has_opinion_modifier = { who = PREVPREV modifier = opinion_using_moon_tea } }
						}
					} 
				}			
				mother = { 
					clr_character_flag = flag_no_cuckoo 
					clr_character_flag = flag_moon_tea
					ROOT = { 
						father = { 
							remove_opinion = { who = PREVPREV modifier = opinion_using_moon_tea }
							clr_character_flag = flag_moon_tea
						} 
					}
				}
				dynasty = mother_bastard
				set_father = 0
				set_mother = 0	
			}
			set_character_flag = stillborn	
		}
		if = {
			limit = { has_character_flag = stillborn }		
			death = { death_reason = death_stillborn }		
			father = { character_event = { id = 381 } }
			real_father = { character_event = { id = 381 } }
			mother = { character_event = { id = 381 } }	
			break = yes
		}
		#Character born to a hiding mother is also hidden	
		if = {
			limit = {
				mother = { 
					is_inaccessible_trigger = yes 
					same_liege = ROOT 
					has_character_flag = hidden_from_siege
				}
			}
			add_trait = in_hiding
			set_character_flag = hidden_from_siege
		}
		# Circumstances of conception were mysterious
		if = {
			limit = {
				mother = { has_character_flag = flag_mysterious_conception_mother }
			}
			mother = { clr_character_flag = flag_mysterious_conception_mother }
			set_character_flag = flag_mysterious_conception
		}
		#Renly changes to primo in ACoK
		if = {
			limit = { father = { character = 5317 } } #Renly
			character_event = { id = clash_of_kings.240 days = 1 } 
		}	
		character_event = { id = dynastic_rivalry.8 days = 1 } #Dynastic feud check
		character_event = { id = high_valyrian.7 days = 1 } #Targ Coin Flip	
		character_event = { id = 66113 days = 1 } #Grandchild Prince Title
		#Lannister Traditional Names
		if = {
			limit = { dynasty = 190 }
			character_event = { id = dynasty.50 } 
		}	
		#Durrandon Traditional Names
		if = {
			limit = { dynasty = 1544 }
			character_event = { id = dynasty.51 }
		}
		# Child Perceived to be Demon Born
		if = {
			limit = {
				has_dlc = "The Old Gods"
				mother = { has_character_flag = pregnant_with_demon }
			}
			random_list = {
				50 = { set_character_flag = demon_child }
				50 = { set_character_flag = demon_child_fake }
			}
			mother = { clr_character_flag = pregnant_with_demon }
		}
		# A child born to Dothraki parents is deformed
		if = {
			limit = {
				liege = {
					culture = dothraki
					any_child = { character = ROOT }
					NOT = { trait = incapable }
					prisoner = no
					
				}
				OR = {
					trait = inbred
					trait = weak
					trait = dwarf
					trait = hunchback
					trait = clubfooted
				}			
			}
			liege = { character_event = { id = dothraki.751 days = 5 } }
		}
		#sisterman child is deformed, sacrifice to the gods?
		if = {
			limit = {
				OR = {
					father = { religion = lady_of_the_waves }
					mother = { religion = lady_of_the_waves }
				}	
				OR = {
					trait = dwarf
					trait = inbred
					trait = clubfooted
					trait = hunchback
					trait = harelip
				}
			}
			if = {
				limit = {
					father = {
						religion = lady_of_the_waves
						is_alive = yes
						NOT = { trait = incapable }
						NOT = { ROOT = { mother = { higher_tier_than = PREVPREV religion = lady_of_the_waves is_alive = yes } } }
					}
				}
				father = { character_event = { id = pirate.12 days = 5 } }
				set_character_flag = father_sacrifice
			}
			if = {
				limit = {
					mother = { 
						religion = lady_of_the_waves
						is_alive = yes
						NOT = { trait = incapable }
					}
					NOT = { has_character_flag = father_sacrifice }
				}
				mother = { character_event = { id = pirate.12 days = 5 } }
			}
			clr_character_flag = father_sacrifice
		}
		# Wolf's Blood inheritance
		if = {
			limit = {
				has_dlc = "Horse Lords"
				OR = {
					father_even_if_dead = {
						has_character_modifier = wolf_blood
						is_father_real_father = yes
					}
					mother_even_if_dead = { has_character_modifier = wolf_blood }
				}
			}
			character_event = { id = HL.1701 days = 150 } # This is when you would start noticing it...
		}
		# Child born to Orys and Argella is stormlander
		if = {
			limit = {
				father_even_if_dead = { character = 1317 }
				mother_even_if_dead = { character = 11544 }
				dynasty = 317
			}
			culture = stormlander
			set_graphical_culture = stormlander
		}
		# Chronicle entry
		if = {
			limit = {
				OR = {
					real_father = { event_target:chronicle_player = { character = PREV } }
					event_target:chronicle_player = {
						any_child = { character = ROOT }
					}
				}
			}
			character_event = { id = CM.19011 days = 2 } # Delay to allow for naming of child.
		}
		#babies born in seclusion gain seclusion
		if = {
			limit = {
				host = {
					has_character_modifier = in_seclusion
				}
			}
			add_character_modifier = {
				name = in_seclusion
				duration = -1
			}
		}
		#Chance of infertilty
		if = {
			limit = {
				NOT = { fertility = 0.51 }
			}
			random_list = {
				84 = { }
				9 = { fertility = -0.1 }
				5 = { fertility = -0.25 }
				2 = { fertility = -0.5 }
			}
		}	
		# Random events
		random = {
			chance = 1
			modifier = {
				factor = 0.5
			}
			character_event = { id = RoI.10000 days = 2 } # Reincarnation?
		}
		random = {
			chance = 1
			character_event = { id = HL.1000 days = 2 } # Child born with Wolf's Blood
		}
	}
	
}	

#############################################
# EVENTS LEADING UP TO BASTARD PREGNANCY 
# (Attraction grows between the male ruler and a female courtier)
#############################################

# A courtier initiates romance with their liege
character_event = {
	id = 450
	desc = EVTDESC450
	picture = GFX_evt_lovers
	is_triggered_only = yes
	
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		OR = { #If ruler must be at liege's court
			is_ruler = no
			liege = { 
				at_location = ROOT 
				NOT = { character = ROOT } 
			}
		}
		OR = {
			is_female = no
			NOT = { age = 40 }
		}
		independent = no
		has_lover = no
		is_pregnant = no
		is_consort = no
		is_ill = no
		NOT = { trait = infirm }
		NOT = { trait = celibate }
		NOT = { trait = eunuch }
		NOT = { trait = dragon }
		NOT = { is_inaccessible_trigger = yes }
				
		OR = {
			is_married = no
			trait = lustful
			trait = deceitful
			spouse = {
				NOT = { is_lover = ROOT }
				NOT = { reverse_opinion = { who = ROOT value = 50 } }
			}
		}
		
		liege = {
			NOT = { character = ROOT }
			NOT = { num_of_lovers = 5 }
			is_pregnant = no
			prisoner = no
			age = 16
			is_ill = no
			NOT = { trait = infirm }
			NOT = { trait = incapable }
			NOT = { trait = celibate }
			NOT = { trait = eunuch }
			NOT = { is_inaccessible_trigger = yes }
			OR = {
				is_married = no
				trait = lustful
				trait = deceitful
				spouse = {
					NOT = { is_lover = PREV }
					NOT = { reverse_opinion = { who = PREV value = 50 } }
				}
			}
			OR = {
				is_female = no
				NOT = { age = 40 }
			}			
			OR = { #If liege is relative must either be lustful, Valyrian or Targaryen
				AND = {
					NOT = { is_child_of = ROOT }
					NOT = { mother_even_if_dead = { is_child_of = ROOT } }
					NOT = { father_even_if_dead = { is_child_of = ROOT } }
					ROOT = {
						NOT = { is_child_of = PREV }
						NOT = { mother_even_if_dead = { is_child_of = PREVPREV } }
						NOT = { father_even_if_dead = { is_child_of = PREVPREV } }
					}
				}
				ROOT = { 
					trait = lustful 
					NOT = { trait = honorable }
				}								
				AND = {
					ROOT = { religion = valyrian }
					religion = valyrian
				}
				AND = {
					dynasty = ROOT
					is_divine_blood_dynasty_trigger = yes
				}
			}
			#Gender must match liege's sexuality
			OR = {
				AND = {
					NOT = { trait = homosexual }
					ROOT = { NOT = { trait = homosexual } }
					NOT = { same_sex = ROOT }
				}
				AND = {
					trait = homosexual
					same_sex = ROOT
				}			
				#Dornish need not be homosexual if lustful
				AND = {
					culture_group = dornish
					trait = lustful	
				}	
			}	
			NOT = {
				is_former_lover = ROOT
			}			
			NOT = {
				has_character_modifier = lustful_affair_timer
			}
			NOT = {
				has_opinion_modifier = {
					who = ROOT
					modifier = opinion_former_lover
				}
			}
			NOT = { is_married = ROOT }
			opinion = { who = ROOT value = -20 }
			reverse_opinion = { who = ROOT value = -20 }
			NOT = { is_rival = ROOT }
		}		
	}
	
	
	weight_multiplier = {
		days = 1
		
		modifier = {
			factor = 0.5
			has_dlc = "Way of Life"
			NOT = { has_focus = focus_seduction }
			NOT = { liege = { has_focus = focus_seduction } }
		}
		modifier = {
			factor = 2.0
			has_ambition = obj_make_the_eight
		}		
		modifier = {
			factor = 0.025 #make it possible (but unlikely) for a courtier to 'come out of the closet' to make a pass at the liege
			NOT = { trait = homosexual }
			liege = { same_sex = ROOT }
			OR = { #Dornish need not be homosexual if lustful
				NOT = { trait = lustful	}
				NOT = { culture_group = dornish }
			}
		}
		modifier = {
			factor = 0.25
			liege = { num_of_lovers = 1 }
		}		
		modifier = {
			factor = 0.25
			liege = { num_of_lovers = 2 }
		}
		modifier = {
			factor = 0.33
			liege = { num_of_lovers = 3 }
		}
		modifier = {
			factor = 0.4
			liege = { num_of_lovers = 4 }
		}
		modifier = {
			factor = 0.5
			religion = drowned_god
		}
		modifier = {
			factor = 3.0
			trait = homosexual #to balance for fewer potential lovers
		}	
		modifier = {
			factor = 3.0
			has_character_flag = debutante
			NOT = {
				had_character_flag = {
					flag = debutante
					days = 730
				}
			}
		}
		modifier = {
			factor = 1.5
			NOT = { age = 20 }
		}
		modifier = {
			factor = 0.03 #Incest should be rare
			liege = {
				is_close_relative = ROOT
				OR = {
					NOT = { dynasty = ROOT }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}
		}
		modifier = {
			factor = 2
			is_divine_blood_dynasty_trigger = yes
			liege = {
				is_close_relative = ROOT
				dynasty = ROOT
				is_divine_blood_dynasty_trigger = yes
			}
		}
		modifier = {
			factor = 0.5
			age = 30
		}
		modifier = {
			factor = 3.0
			has_ambition = obj_find_lover
		}
		modifier = {
			factor = 3.0
			liege = { has_ambition = obj_find_lover }
		}
		modifier = {
			factor = 2.0
			trait = hedonist
		}
		modifier = {
			factor = 2.0
			liege = { trait = hedonist }
		}		
		modifier = {
			factor = 2.0
			trait = lustful
		}
		modifier = {
			factor = 2.0
			liege = { trait = lustful }
		}
		modifier = {
			factor = 2.0
			trait = fair
		}
		modifier = {
			factor = 2.0
			liege = { trait = fair }
		}	
		modifier = {
			factor = 0.5
			trait = ugly
		}
		modifier = {
			factor = 0.5
			liege = { trait = ugly }
		}		
		modifier = {
			factor = 0.5
			NOT = { opinion = { who = liege value = 0 } }
		}	
		modifier = {
			factor = 0.5
			NOT = { reverse_opinion = { who = liege value = 0 } }
		}			
		modifier = {
			factor = 0.75
			NOT = { opinion = { who = liege value = 25 } }
		}	
		modifier = {
			factor = 0.75
			NOT = { reverse_opinion = { who = liege value = 25 } }
		}			
		modifier = {
			factor = 1.25
			opinion = { who = liege value = 50 }
		}
		modifier = {
			factor = 1.25
			reverse_opinion = { who = liege value = 50 }
		}
		modifier = {
			factor = 1.25
			opinion = { who = liege value = 75 }
		}
		modifier = {
			factor = 1.25
			reverse_opinion = { who = liege value = 75 }
		}
		modifier = {
			factor = 0.1
			trait = chaste
		}
		modifier = {
			factor = 0.1
			liege = { trait = chaste }
		}
		modifier = {
			factor = 0.5
			liege = { any_child = { trait = bastard } }
		}
	}

	option = {
		name = "EVTOPTA450"
		if = {
			limit = {
				NOT = { trait = homosexual }
				liege = { same_sex = ROOT }
				OR = { #Dornish need not be homosexual if lustful
					NOT = { trait = lustful	}
					NOT = { culture_group = dornish }
				}
			}
			add_trait = homosexual
		}
		liege = { 
			add_character_modifier = {
				name = lustful_affair_timer
				duration = 1460
				hidden = yes
			}		
			character_event = { id = 451 tooltip = EVTTOOLTIP451 } 
		}
	}
}

# The liege responds to his/her advances
character_event = {
	id = 451
	desc = EVTDESC451
	picture = GFX_evt_lovers

	is_triggered_only = yes 
	
	option = {
		name = EVTOPTA451
		ai_chance = { 
			factor = 90 
			modifier = {
				factor = 4
				trait = lustful
			}
			modifier = {
				factor = 2
				trait = hedonist
			}				
			modifier = {
				factor = 0.1
				is_close_relative = FROM
				trait = honorable
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}	
			modifier = {
				factor = 0.05
				NOT = { trait = homosexual }
				same_sex = FROM
				OR = { #Dornish need not be homosexual if lustful
					NOT = { trait = lustful	}
					NOT = { culture_group = dornish }
				}
			}
		}
		FROM = { character_event = { id = 452 tooltip = EVTTOOLTIP452 } }
		hidden_tooltip = { change_variable = { which = "lifestyle_hedonist" value = 1 } }
	}
	
	option = {
		name = EVTOPTB451
		trigger = {
			OR = {
				OR = {
					NOT = { trait= lustful }
					NOT = {
						AND = {
							NOT = { trait = homosexual }
							NOT = { same_sex = FROM }
						}
						AND = {
							trait = homosexual
							same_sex = FROM
						}			
						#Dornish need not be homosexual if lustful
						culture_group = dornish
					}
				}	
				ai = yes
			}	
		}
		ai_chance = { 
			factor = 10 
			modifier = {
				factor = 0.01
				has_focus = focus_seduction
			}
			modifier = {
				factor = 3
				num_of_lovers = 1
			}		
			modifier = {
				factor = 3
				num_of_lovers = 2
			}
			modifier = {
				factor = 3
				num_of_lovers = 3
			}
			modifier = {
				factor = 3
				num_of_lovers = 4
			}
			modifier = {
				factor = 10
				trait = chaste
			}
			modifier = {
				factor = 2
				trait = temperate
			}	
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 20
				is_close_relative = FROM
				NOT = { trait = lustful }
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}				
		}
	}
	
	option = {
		name = EVTOPTC451
		trigger = {
			trait= lustful
			ai = no
			OR = {
				AND = {
					NOT = { trait = homosexual }
					NOT = { same_sex = FROM }
				}
				AND = {
					trait = homosexual
					same_sex = FROM
				}			
				#Dornish need not be homosexual if lustful
				culture_group = dornish
			}
		}
		tooltip_info = lustful
		piety = 15
		if = {
			limit = { NOT = { trait = stressed } }
			random = {
				chance = 15
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
			}
		}	
	}
}

# The courtier accepts or spurns the liege lord
character_event = {
	id = 452
	desc = EVTDESC452
	picture = GFX_evt_lovers
	
	is_triggered_only = yes 
	
	option = {
		name = EVTOPTA452
		ai_chance = { 
			factor = 90 
			modifier = {
				factor = 0.1
				is_close_relative = FROM
				trait = honorable
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}
		}
		trigger = {
			fertility = 0.33
			FROM = { fertility = 0.33 }
		}
		add_lover = FROM
		FROM = { character_event = { id = 453 days = 1 tooltip = EVTTOOLTIP453 } }	
		#log = "452: [From.GetBestName] tumbles [Root.GetBestName]"		
		if = {
			limit = {
				is_female = yes
				NOT = { age = 45 }
				FROM = { is_female = no }
				is_married = yes
			}
			random = {
				chance = 50
				impregnate_cuckoo = FROM
				#log = "452: [From.GetBestName] cuckoo impregnates [Root.GetBestName]"
			}
		}
		if = {
			limit = {
				is_female = yes
				NOT = { age = 45 }
				FROM = { is_female = no }
				is_married = no
			}
			random = {
				chance = 50
				impregnate = FROM
				#log = "452: [From.GetBestName] impregnates [Root.GetBestName]"
			}
		}
		if = {
			limit = {
				is_female = no
				FROM = { 
					NOT = { age = 45 } 
					is_female = yes 
					is_married = yes
				}
			}
			random = {
				chance = 50
				FROM = { 
					impregnate_cuckoo = ROOT 
					#log = "452: [From.GetBestName] cuckoo impregnates [Root.GetBestName]"
				}
			}
		}
		if = {
			limit = {
				is_female = no
				FROM = { 
					NOT = { age = 45 } 
					is_female = yes 
					is_married = no
				}
			}
			random = {
				chance = 50
				FROM = { 
					impregnate = ROOT 
					#log = "452: [From.GetBestName] impregnates [Root.GetBestName]"
				}
			}
		}					
		hidden_tooltip = { change_variable = { which = "lifestyle_hedonist" value = 1 } }
		
		
		FROM = {
			if = {
				limit = { has_ambition = obj_make_the_eight }
				hidden_tooltip = { character_event = { id = ambition.1 } }
			}
		}
	}
	option = {
		name = "EVTOPTA452"
		ai_chance = { 
			factor = 90 
			modifier = {
				factor = 0.1
				is_close_relative = FROM
				trait = honorable
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}
		}
		trigger = {
			OR = {
				NOT = { fertility = 0.33 }
				NOT = { FROM = { fertility = 0.33 } }
			}
		}
		hidden_tooltip = { change_variable = { which = "lifestyle_hedonist" value = 1 } }
		add_lover = FROM
		FROM = { character_event = { id = 453 days = 1 tooltip = EVTTOOLTIP453 } }
		FROM = {
			if = {
				limit = { has_ambition = obj_make_the_eight }
				hidden_tooltip = { character_event = { id = ambition.1 } }
			}
		}
	}
	
	option = {
		name = "EVTOPTB452"
		ai_chance = { 
			factor = 5
			modifier = {
				factor = 10
				trait = chaste
			}
			modifier = {
				factor = 2
				FROM = { is_female = no }
				is_female = yes
			}			
			modifier = {
				factor = 2
				trait = temperate
			}	
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 10
				is_close_relative = FROM
				NOT = { trait = lustful }
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}	
			modifier = {
				factor = 0.1
				liege = {
					OR = {
						trait = seducer
						trait = seductress
					}
				}
			}
		}
		trigger = {
			NOT = { trait = lustful }
			NOT = { trait = hedonist }
		}
		FROM = { character_event = { id = 454 days = 1 tooltip = EVTTOOLTIP454 } }
		#log = "452: [Root.GetBestName] rebuffs [From.GetBestName]"
	}
	
	option = {
		name = "EVTOPTC452"
		trigger = {
			FROM = { is_female = no }
			is_female = yes
			NOT = { trait = lustful }
			NOT = { trait = hedonist }			
		}	
		ai_chance = { 
			factor = 5
			modifier = {
				factor = 10
				trait = chaste
			}
			modifier = {
				factor = 2
				trait = temperate
			}	
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 10
				is_close_relative = FROM
				NOT = { trait = lustful }
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}
				}
			}	
			modifier = {
				factor = 0.1
				liege = {
					OR = {
						trait = seducer
						trait = seductress
					}
				}
			}			
		}
		FROM = { character_event = { id = 455 days = 1 tooltip = EVTTOOLTIP455 } }
		#log = "452: [Root.GetBestName] embarrasses [From.GetBestName]"
	}
}

# The ruler becomes his/her lover
character_event = {
	id = 453
	
	is_triggered_only = yes 
	
	desc = EVTDESC453
	picture = GFX_evt_lovers
	
	option = {
		name = EVTOPTA453
		add_lover = FROM
		FROM = {
			if = {
				limit = { has_ambition = obj_make_the_eight }
				hidden_tooltip = { character_event = { id = ambition.1 } }
			}
		}
	}
}

# The ruler is spurned and disappointed
character_event = {
	id = 454
	picture = GFX_evt_quarrel
	
	is_triggered_only = yes 
	
	desc = EVTDESC454
	
	option = {
		name = EVTOPTA454
		opinion = {
			who = FROM
			modifier = opinion_spurned
			years = 5
		}
	}
}

# The ruler is spurned and embarrassed
character_event = {
	id = 455
	picture = GFX_evt_quarrel
	
	is_triggered_only = yes 
	
	desc = EVTDESC455
	
	option = {
		name = EVTOPTA455
		opinion = {
			who = FROM
			modifier = opinion_embarrassed
			years = 5
		}
	}
}

#############################################
# PREGNANCY STARTS SHOWING EVENTS
#############################################

# On-action event: Pregnancy starts showing
character_event = {
	id = 400
	desc = EVTDESC400
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { trait = pregnant }
		father_of_unborn = { is_married = ROOT }
	}
	
	immediate = { clr_character_flag = forced_child }
		
	option = {
		name = OK
		ai_chance = { factor = 95 }
		add_trait = pregnant
		prestige = 10
		
		# Mark father's location
		hidden_tooltip = {
			if = {
				limit = { 
					father_of_unborn = {
						OR = {
							NOT = { at_location = ROOT }
							trait = infirm
							is_crippled_trigger = yes
							trait = homosexual
							trait = inbred
							is_ill = yes
						}
					}					 
				}
				set_character_flag = flag_mysterious_conception_mother
			}
		}
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}	
		if = {
			limit = {
				father_of_unborn = {
					is_alive = yes
				}
			}
			
			hidden_tooltip = {
				if = {
					limit = {
						father_of_unborn = {
							trait = paranoid
							NOT = { trait = slave }
						}
					}
					random = {
						chance = 50
						father_of_unborn = { character_event = { id = 404 } }
						break = yes
					}
				}
				if = {
					limit = {
						father_of_unborn = {
							NOT = { trait = paranoid }
							NOT = { trait = trusting }
							NOT = { trait = slave }
						}
					}
					random = {
						chance = 1
						father_of_unborn = { character_event = { id = 404 } }
						break = yes
					}
				}
			}
			
			father_of_unborn = { character_event = { id = 403 tooltip = EVTTOOLTIP403 } }
		}
	}
	
	option = {
		# Moon Tea
		name = "EVTOPTB400"
		trigger = { 
			OR = { #Only important people have access
				is_ruler = yes
				liege = { is_close_relative = ROOT }
				liege = { is_married = ROOT }
				liege = { dynasty = ROOT }
				prestige = 100
				intrigue = 12
				wealth = 25
			}
			prisoner = no #No access to tea
		}	
		add_trait = pregnant
		wealth = -15
		piety = -15
		set_character_flag = flag_stillbirth
		custom_tooltip = { text = TOOLTIPSTILLBIRTH }
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}
		if = {
			limit = {
				father_of_unborn = {
					is_alive = yes
				}
			}
			
			hidden_tooltip = {
				if = {
					limit = {
						father_of_unborn = {
							trait = paranoid
							NOT = { trait = slave }
						}
					}
					random = {
						chance = 50
						father_of_unborn = { character_event = { id = 404 } }
						break = yes
					}
				}
				if = {
					limit = {
						father_of_unborn = {
							NOT = { trait = paranoid }
							NOT = { trait = trusting }
							NOT = { trait = slave }
						}
					}
					random = {
						chance = 1
						father_of_unborn = { character_event = { id = 404 } }
						break = yes
					}
				}
			}
			
			father_of_unborn = { character_event = { id = 403 tooltip = EVTTOOLTIP403 } }
		}
		ai_chance = {
			factor = 5
			
			#Must have a reason to do this against spouse
			modifier = {
				factor = 0
				OR = { #young and lustful
					age = 21
					AND = {
						NOT = { trait = lustful }
						NOT = { trait = hedonist }
					}	
				}
				#Is either depressed, lunatic, posessed
				NOT = { trait = depressed }
				NOT = { trait = lunatic }
				NOT = { trait = possessed }
				
				spouse = { reverse_opinion = { who = ROOT value = -39 } } #dislikes husband
				any_lover = { #has a lover and is not husband's lover
					is_female = no
					NOT = { is_married = ROOT }
				}
			}	
			
			#Rulers have further restrictions
			modifier = {
				factor = 0
				is_ruler = yes
				NOT = { trait = depressed }
				NOT = { trait = lunatic }
				NOT = { trait = possessed }
				OR = {
					NOT = { current_heir = { is_child_of = ROOT } }
					NOT = { 
						any_lover = { 
							is_female = no 
							NOT = { is_married = ROOT }
						}
					}
					has_ambition = obj_have_a_daughter
					has_ambition = obj_have_a_son
					has_ambition = obj_five_children
				}
			}
			
			modifier = {
				factor = 1.5
				trait = lustful
			}
			modifier = {
				factor = 1.5
				NOT = { age = 21 }
				trait = lustful
			}
			modifier = {
				factor = 1.5
				trait = hedonist
			}
			modifier = {
				factor = 1.5
				NOT = { age = 21 }
				trait = hedonist
			}
			
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			
			# Wants to Spite Husband
			modifier = {
				factor = 0.64
				spouse = { reverse_opinion = { who = ROOT value = 100 } }
			}
			modifier = {
				factor = 0.64
				spouse = { reverse_opinion = { who = ROOT value = 80 } }
			}
			modifier = {
				factor = 0.64
				spouse = { reverse_opinion = { who = ROOT value = 60 } }
			}
			modifier = {
				factor = 0.64
				spouse = { reverse_opinion = { who = ROOT value = 40 } }
			}
			modifier = {
				factor = 0.64
				spouse = { reverse_opinion = { who = ROOT value = 20 } }
			}

			modifier = {
				factor = 1.56
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -99 } } }
			}
			modifier = {
				factor = 1.56
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -79 } } }
			}
			modifier = {
				factor = 1.56
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -59 } } }
			}
			modifier = {
				factor = 1.56
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -39 } } }
			}
			modifier = {
				factor = 1.56
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -19 } } }
			}
			
			modifier = {
				factor = 2
				NOT = { spouse = { reverse_opinion = { who = ROOT value = 0 } } }
				trait = wroth
			}
			modifier = {
				factor = 2
				NOT = { spouse = { reverse_opinion = { who = ROOT value = 0 } } }
				trait = envious
			}
			modifier = {
				factor = 2
				NOT = { spouse = { reverse_opinion = { who = ROOT value = 0 } } }
				trait = proud
			}
			
			modifier = {
				factor = 2
				any_lover = { #has a lover and is not husband's lover
					is_female = no
					NOT = { is_married = ROOT }
				}
			}
			
			# Personality Obstacles
			modifier = {
				factor = 0.5
				trait = honorable
			}
			modifier = {
				factor = 0.8
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.8
				trait = honest
			}
			modifier = {
				factor = 0.8
				trait = kind
			}
			modifier = {
				factor = 0.5
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = familyperson
			}
			
			# Conflicting Objectives
			modifier = {
				factor = 0.1
				OR = {
					has_ambition = obj_have_a_daughter
					has_ambition = obj_have_a_son
					has_ambition = obj_five_children
				}
			}
		}
	}
}

# On-action event: Pregnancy out of wedlock!
character_event = {
	id = 401
	desc = EVTDESC401
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { trait = pregnant }
		is_married = no
		is_consort = no
		father_of_unborn = {
			NOT = { is_married = ROOT }
		}
		NOT = { has_character_flag = forced_child }
	}
	
	option = {
		name = OK
		add_trait = pregnant
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		piety = -25
		prestige = -25			
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}
		ai_chance = { factor = 90 }
	}
	
	option = {
		# Moon Tea
		name = "EVTOPTB400"
		trigger = { 
			NOT = { trait = salt_wife } 
			OR = { #Only important people have access
				is_ruler = yes
				liege = { is_close_relative = ROOT }
				liege = { is_married = ROOT }
				liege = { dynasty = ROOT }
				prestige = 100
				intrigue = 12
				wealth = 25
			}
			prisoner = no #No access to tea
		}
		add_trait = pregnant
		set_character_flag = flag_stillbirth
		set_character_flag = flag_moon_tea
		custom_tooltip = { text = TOOLTIPSTILLBIRTH }
		hidden_tooltip = { father_of_unborn = { character_event = { id = 406 } } }
		
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}
		ai_chance = {
			factor = 40
				
			# Not ready to be a mother
			modifier = {
				factor = 1.5
				NOT = { age = 20 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 19 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 18 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 17 }
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.5
				trait = lustful
			}
			modifier = {
				factor = 1.5
				trait = hedonist
			}
			#Unmarried Courtiers with no means will keep child if father is very important or golddigger
			modifier = {
				factor = 0.1
				#is_ruler = no
				father_of_unborn = { higher_tier_than = ROOT }
				NOT = { 
					any_dynasty_member = { 
						is_close_relative = ROOT 
						ROOT = { father_of_unborn = { lower_tier_than = PREVPREV } }
					} 
				}
				OR = { 
					trait = ambitious
					trait = greedy
					trait = ruthless
					trait = envious
				}
			}
			modifier = {
				factor = 0.2
				lower_tier_than = KING
				father_of_unborn = { tier = KING }
				NOT = { any_dynasty_member = { is_close_relative = ROOT higher_tier_than = DUKE } }
			}	
			modifier = {
				factor = 0.1
				NOT = { tier = EMPEROR }
				father_of_unborn = { tier = EMPEROR }
				NOT = { any_dynasty_member = { is_close_relative = ROOT tier = EMPEROR } }
			}	
			# Avoiding Scandal
			modifier = {
				factor = 5
				OR = {
					is_ruler = yes
					any_dynasty_member = { is_close_relative = ROOT higher_tier_than = BARON }
				}	
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 4
				father_of_unborn = { is_married = yes }
			}
			modifier = {
				factor = 0.75
				father_of_unborn = { has_ambition = obj_make_the_eight }
			}
			
			# Father unlikely to support child
			modifier = {
				factor = 2
				father_of_unborn = { trait = ruthless }
			}
			modifier = {
				factor = 2
				father_of_unborn = { trait = cruel }
			}
			modifier = {
				factor = 2
				father_of_unborn = { trait = greedy }
			}
			modifier = {
				factor = 2
				father_of_unborn = { trait = slothful }
			}
			
			# Personality Obstacles
			modifier = {
				factor = 0.8
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = honest
			}
			modifier = {
				factor = 0.8
				trait = kind
			}
			modifier = {
				factor = 0.5
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = familyperson
			}
			modifier = {
				factor = 0
				OR = {
					has_ambition = obj_have_a_daughter
					has_ambition = obj_have_a_son
					has_ambition = obj_five_children
				}
			}
		}
	}
}

# On-action event: Pregnancy in matrimony, with another father!
character_event = {
	id = 402
	desc = EVTDESC402
	picture = "GFX_evt_pregnancy"
	
	is_triggered_only = yes
	is_married = yes
	
	trigger = {
		NOT = { trait = pregnant }		
		is_consort = no
		father_of_unborn = {
			NOT = {
				is_married = ROOT
			}
		}
		NOT = { has_character_flag = forced_child }
	}
	
	# Option 1 - Come Clean
	option = {
		name = "EVTOPTA402"
		trigger = { NOT = { trait = slave } }
		add_trait = pregnant
		set_character_flag = flag_no_cuckoo
		clr_character_flag = first_night_child
		father_of_unborn = { character_event = { id = 405 tooltip = EVTTOOLTIP405 } }
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		
		spouse = { character_event = { id = 40499 tooltip = EVTTOOLTIP40499 } }
		
		ai_chance = {
			factor = 33
			
			# Opinion of Spouse
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 100 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 90 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 80 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 70 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 50 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 40 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 30 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 20 } }
			}
			modifier = {
				factor = 1.25
				spouse = { reverse_opinion = { who = ROOT value = 10 } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -9 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -19 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -29 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -39 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -49 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -59 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -69 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -79 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -89 } } }
			}
			modifier = {
				factor = 0.8
				NOT = { spouse = { reverse_opinion = { who = ROOT value = -99 } } }
			}
			
			# Spouse's Personality Effects
			modifier = {
				factor = 0.5
				spouse = { trait = wroth }
			}
			modifier = {
				factor = 2
				spouse = { trait = patient }
			}
			modifier = {
				factor = 0.5
				spouse = { trait = cruel }
			}
			modifier = {
				factor = 0.5
				spouse = { trait = envious }
			}
			modifier = {
				factor = 2
				spouse = { trait = kind }
			}
			modifier = {
				factor = 0.5
				spouse = { trait = proud }
			}
			modifier = {
				factor = 2
				spouse = { trait = humble }
			}
		}
	}
	
	# Option 2 - Moon Tea
	option = {
		name = "EVTOPTB400"
		trigger = { 
			NOT = { trait = slave }
			NOT = { trait = salt_wife } 
			OR = { #Only important people have access
				is_ruler = yes
				liege = { is_close_relative = ROOT }
				liege = { is_married = ROOT }
				liege = { dynasty = ROOT }
				prestige = 100
				intrigue = 12
				wealth = 25
			}	
			prisoner = no #No access to tea
		}
		add_trait = pregnant
		if = {
			limit = { father_of_unborn = { character = 0 } } #father is unknown
			set_character_flag = bastard_father_unknown
		}
		set_character_flag = flag_stillbirth
		set_character_flag = flag_moon_tea
		clr_character_flag = first_night_child
		custom_tooltip = { text = TOOLTIPSTILLBIRTH }
		
		spouse = { character_event = { id = 403 tooltip = "EVTTOOLTIP403" } }
		
		hidden_tooltip = { father_of_unborn = { character_event = { id = 406 } } }
		ai_chance = {
			factor = 33

			# Not ready to be a mother
			modifier = {
				factor = 1.5
				NOT = { age = 20 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 19 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 18 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 17 }
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			
			# Opinion of Father
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 100 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 90 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 80 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 70 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 60 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 50 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 40 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 30 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 20 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 10 } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -9 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -19 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -29 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -39 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -49 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -59 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -69 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -79 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -89 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -99 } } }
			}
			
			# Personality Obstacles
			modifier = {
				factor = 0.8
				trait = honorable
			}
			modifier = {
				factor = 0.8
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = familyperson
			}
			
			# Conflicting Objective
			modifier = {
				factor = 0.1
				OR = {
					has_ambition = obj_have_a_daughter
					has_ambition = obj_have_a_son
					has_ambition = obj_five_children
				}
			}
		}
	}
	
	# Option 3 - Pass Child Off as Legitimate
	option = {
		trigger = { 
			NOT = { trait = slave }
			NOT = { has_character_flag = first_night_child } 
			#Spouse must plausibly be able to have children
			spouse = {
				NOR = {
					NOT = { age = 13 }
					trait = eunuch
					trait = incapable
					trait = celibate
				}
			}
		}
		name = "EVTOPTC402"
		add_trait = pregnant
		if = {
			limit = { father_of_unborn = { character = 0 } } #father is unknown
			set_character_flag = bastard_father_unknown
		}
		spouse = { character_event = { id = 404 tooltip = EVTTOOLTIP404 } }
		hidden_tooltip = { father_of_unborn = { character_event = { id = 407 } } }
		
		# Mark father's location
		hidden_tooltip = {
			if = {
				limit = { 
					spouse = {
						OR = {
							NOT = { at_location = ROOT }
							trait = infirm
							is_crippled_trigger = yes
							trait = homosexual
							trait = inbred
							is_ill = yes
						}
					}					 
				}
				set_character_flag = flag_mysterious_conception_mother
			}
		}
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}
		ai_chance = {
			factor = 33
			
			#This would be suspicious
			modifier = {
				factor = 0.5
				spouse = {
					OR = {
						NOT = { at_location = ROOT }
						trait = infirm
						is_crippled_trigger = yes
						trait = homosexual
						trait = inbred
						is_ill = yes
					}
				}
			}
			
			# Personality Modifiers
			modifier = {
				factor = 2
				trait = deceitful
			}
			modifier = {
				factor = 0.5
				trait = honest
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 0.5
				trait = content
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			
			# Already have secret bastard children
			modifier = {
				factor = 5
				any_child = { has_character_flag = flag_secret_bastard }
			}
		}
	}
	
	# Slaves
	option = {
		name = "EVTOPTA402"
		trigger = { trait = slave }
		add_trait = pregnant
		set_character_flag = flag_no_cuckoo
		clr_character_flag = first_night_child
		father_of_unborn = { character_event = { id = 40399 tooltip = EVTTOOLTIP405 } }
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
	}
}

# On-action event: Forced Pregnancy 
character_event = {
	id = 40299
	desc = EVTDESC40299
	picture = "GFX_evt_pregnancy"
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { trait = pregnant }
		father_of_unborn = {
			NOT = { is_married = ROOT }
			NOT = { is_consort = ROOT }
		}
		has_character_flag = forced_child
	}
	
	immediate = { clr_character_flag = forced_child }
	
	# Option 1 - Keep Child
	option = {
		name = "EVTOPTA40299"
		add_trait = pregnant
		if = {
			limit = { is_married = yes }
			set_character_flag = flag_no_cuckoo
		}	
		clr_character_flag = first_night_child
		hidden_tooltip = { father_of_unborn = { character_event = { id = 40599 } } }
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		
		hidden_tooltip = { spouse = { character_event = { id = 40598 } } }
		
		ai_chance = {
			factor = 13
		}
	}
	
	# Option 2 - Moon Tea
	option = {
		name = "EVTOPTB400"
		trigger = { 
			NOT = { trait = slave }
			NOT = { trait = salt_wife } 
			OR = { #Only important people have access
				is_ruler = yes
				liege = { is_close_relative = ROOT }
				liege = { is_married = ROOT }
				liege = { dynasty = ROOT }
				prestige = 100
				intrigue = 12
				wealth = 25
			}	
			prisoner = no #No access to tea
		}
		add_trait = pregnant
		
		if = {
			limit = { is_married = yes }
			set_character_flag = flag_no_cuckoo
		}
		set_character_flag = flag_stillbirth
		set_character_flag = flag_moon_tea
		clr_character_flag = first_night_child
		custom_tooltip = { text = TOOLTIPSTILLBIRTH }
		
		spouse = { character_event = { id = 40597 tooltip = "EVTTOOLTIP40597" } }
		ai_chance = {
			factor = 100

			# Not ready to be a mother
			modifier = {
				factor = 1.5
				NOT = { age = 20 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 19 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 18 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 17 }
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			
			# Opinion of Father
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 100 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 90 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 80 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 70 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 60 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 50 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 40 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 30 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 20 } }
			}
			modifier = {
				factor = 0.8
				father_of_unborn = { reverse_opinion = { who = ROOT value = 10 } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -9 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -19 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -29 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -39 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -49 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -59 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -69 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -79 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -89 } } }
			}
			modifier = {
				factor = 1.25
				NOT = { father_of_unborn = { reverse_opinion = { who = ROOT value = -99 } } }
			}
			
			# Personality Obstacles
			modifier = {
				factor = 0.8
				trait = honorable
			}
			modifier = {
				factor = 0.8
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = familyperson
			}
			
			# Conflicting Objective
			modifier = {
				factor = 0.1
				OR = {
					has_ambition = obj_have_a_daughter
					has_ambition = obj_have_a_son
					has_ambition = obj_five_children
				}
			}
		}
	}
}

# The husband is a proud father!
character_event = {
	id = 403
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC403

	option = {
		name = OK
		prestige = 5
	}
}

# Expecting a slave's child
character_event = {
	id = 40399
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC40399

	option = {
		name = OK
		prestige = 5
	}
}
# Expecting a forced child
character_event = {
	id = 40599
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC40599

	option = {
		name = OK
	}
}
# Inform spouse forced child
character_event = {
	id = 40598
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC40598

	option = {
		name = OK
		prestige = -25
	}
}
# Inform spouse forced child moon tea
character_event = {
	id = 40597
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC40597

	option = {
		name = OK
	}
}

# The husband suspects something ain't right
character_event = {
	id = 404
	picture = GFX_evt_pregnancy
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	desc = {
		text = EVTDESC404_KF
		trigger = {
			FROM = {
				father_of_unborn_known = yes
				father_of_unborn = {
					NOT = { character = ROOT }
				}
			}
		}
	}
	
	desc = {
		text = EVTDESC404
		trigger = {
			NOT = { random = 50 }
			FROM = {
				OR = {
					father_of_unborn_known = no
					father_of_unborn = { character = ROOT }
				}
			}
		}
	}
	
	desc = {
		text = EVTDESC404_2
		trigger = {
			random = 50
			FROM = {
				OR = {
					father_of_unborn_known = no
					father_of_unborn = { character = ROOT }
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC404 # ...
		trigger = { trait = incapable }
	}
	
	option = {
		name = EVTOPTA404 # Doubt besets me...
		trigger = {
			NOT = { trait = incapable }
			FROM = {
				OR = {
					father_of_unborn_known = no
					father_of_unborn = { character = ROOT }
				}
			}
		}
		if = {
			limit = {
				NOT = { trait = trusting }
				OR = {
					trait = paranoid
					NOT = { at_location = FROM }
					trait = infirm
					is_crippled_trigger = yes
					trait = homosexual
					trait = inbred
					is_ill = yes
					intrigue = 10
					random = 25 # 75% chance
				}
			}
			hidden_tooltip = {
				FROM = { character_event = { id = 21000 days = 7 random = 16 } } # Investigate this further
			}
		}
	}
	
	option = {
		name = EVTOPTB404 # Denounce them both as traitors!
		trigger = {
			NOT = { trait = incapable }
			FROM = {
				father_of_unborn_known = yes
				father_of_unborn = {
					NOT = { character = ROOT }
				}
			}
		}
		
		hidden_tooltip = {
			FROM = {
				father_of_unborn = {
					save_event_target_as = target_adulterer
				}
				character_event = { id = 20 } # Adultery fallout
			}
		}
		
		FROM = {
			father_of_unborn = {
				hidden_tooltip = {
					character_event = { id = 21006 }
				}
			}
			
			hidden_tooltip = {
				character_event = { id = 21005 }
			}
		}
	}
}

# Hidden bounce event: The husband might investigate
character_event = {
	id = 21000
	
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		FROM = { character_event = { id = 21001 } }
	}
	
	option = {
		name = OK
	}
}

# Husband suspects wife is pregnant with another man
character_event = {
	id = 21001
	
	desc = EVTDESC21001
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA21001 # Hire someone to find out
		ai_chance = {
			factor = 100
			
			modifier = {
				factor = 2
				NOT = { at_location = FROM }
			}
			modifier = {
				factor = 2
				trait = infirm
			}
			modifier = {
				factor = 2
				is_crippled_trigger = yes
			}
			modifier = {
				factor = 2
				trait = homosexual
			}
			modifier = {
				factor = 2
				trait = inbred
			}
			modifier = {
				factor = 2
				is_ill = yes
			}
			
			modifier = {
				factor = 0
				trait = trusting
			}
			modifier = {
				factor = 0.25
				trait = craven
			}
			modifier = {
				factor = 0.25
				trait = kind
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 0.5
				trait = temperate
			}
			modifier = {
				factor = 2.0
				trait = deceitful
			}
			modifier = {
				factor = 2.0
				trait = wroth
			}
			modifier = {
				factor = 5.0
				trait = cruel
			}
			modifier = {
				factor = 5.0
				trait = impaler
			}
			modifier = {
				factor = 10
				trait = paranoid
			}
		}
		if = {
			limit = { yearly_income = 100 }
			scaled_wealth = -0.1
		}
		if = {
			limit = { NOT = { yearly_income = 100 } }
			wealth = -10
		}	
		hidden_tooltip = {
			FROM = { character_event = { id = 21002 } } # Investigate this further
		}
	}
	
	option = {
		name = EVTOPTB21001 # No, I trust her word!
		ai_chance = {
			factor = 100
		}
	}
}

# Wife: Hidden bounce event: The husband is investigating
character_event = {
	id = 21002
	
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_pregnant = yes
	}
	
	option = {
		name = OK # Success
		
		trigger = {
			father_of_unborn = {
				NOT = { character = FROM }
			}
		}
		
		clr_character_flag = final_unfaithful_investigation
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				FROM = {
					NOT = { intrigue = 2 }
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					NOT = { intrigue = 5 }
				}
			}
			modifier = {
				factor = 2.0
				FROM = {
					intrigue = 10
				}
			}
			modifier = {
				factor = 3.0
				FROM = {
					intrigue = 15
				}
			}
			modifier = {
				factor = 1.5
				FROM = {
					trait = deceitful
				}
			}
			modifier = {
				factor = 2.0
				FROM = {
					trait = schemer
				}
			}
			modifier = {
				factor = 2.0
				FROM = {
					any_courtier = {
						has_opinion_modifier = {
							modifier = opinion_chasing_friend
							who = ROOT
						}
					}
				}
			}
			modifier = {
				factor = 2.0
				FROM = {
					any_courtier = {
						has_opinion_modifier = {
							modifier = opinion_chasing_spouse
							who = ROOT
						}
					}
				}
			}
			modifier = {
				factor = 2.0
				FROM = {
					any_courtier = {
						has_opinion_modifier = {
							modifier = opinion_chasing_child
							who = ROOT
						}
					}
				}
			}
			modifier = {
				factor = 2.0
				FROM = {
					has_focus = focus_intrigue
				}
			}
		}
		
		set_character_flag = spies_adultery
		FROM = { character_event = { id = 21003 days = 10 random = 30 } }
	}
	
	option = {
		name = OK # No success yet
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				NOT = { intrigue = 2 }
			}
			modifier = {
				factor = 0.5
				NOT = { intrigue = 5 }
			}
			modifier = {
				factor = 2.0
				intrigue = 10
			}
			modifier = {
				factor = 3.0
				intrigue = 15
			}
			modifier = {
				factor = 1.5
				trait = deceitful
			}
			modifier = {
				factor = 1.5
				trait = seducer
			}
			modifier = {
				factor = 2.0
				trait = schemer
			}
			modifier = {
				factor = 5.0
				has_character_modifier = wol_court_vixen
			}
			modifier = {
				factor = 5.0
				father_of_unborn = {
					has_character_modifier = wol_court_tomcat
				}
			}
			modifier = {
				factor = 2.0
				has_focus = focus_intrigue
			}
		}
		
		if = {
			limit = { has_character_flag = final_unfaithful_investigation }
			clr_character_flag = final_unfaithful_investigation
			FROM = { character_event = { id = 21011 days = 15 random = 30 } } # Husband fails
			break = yes
		}
		
		FROM = { character_event = { id = 21010 days = 15 random = 30 } } # Husband can escalate investigation
	}
}

# Husband's investigation is not going well. What now?
character_event = {
	id = 21010
	
	desc = EVTDESC21010
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA21010 # What a relief!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = paranoid
			}
			modifier = {
				factor = 0.1
				has_focus = focus_intrigue
			}
			modifier = {
				factor = 3.0
				trait = trusting
			}
		}
	}
	
	option = {
		name = EVTOPTB21010 # Confront her directly
		ai_chance = {
			factor = 100
		}
		hidden_tooltip = {
			FROM = { character_event = { id = 21012 days = 2 } }
		}
	}
	option = {
		name = EVTOPTC21010 # Hire more spies!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = { wealth = 100 }
			}
			modifier = {
				factor = 0.1
				trait = greedy
			}
		}
		if = {
			limit = { yearly_income = 100 }
			scaled_wealth = -0.25
		}
		if = {
			limit = { NOT = { yearly_income = 100 } }
			wealth = -25
		}
		hidden_tooltip = {
			FROM = {
				set_character_flag = final_unfaithful_investigation
				character_event = { id = 21002 }
			}
		}
	}
	option = {
		name = EVTOPTD21010 # Lay a trap
		trigger = {
			FROM = {
				NOT = { intrigue = 9 }
				NOT = { trait = schemer }
				NOT = { has_character_modifier = wol_court_vixen }
				father_of_unborn = {
					is_alive = yes 
					NOT = { character = ROOT }
					NOT = { has_character_modifier = wol_court_tomcat }
				}
			}
			OR = {
				intrigue = 12
				trait = schemer
				AND = {
					has_focus = focus_intrigue
					intrigue = 5
				}
			}
		}
		tooltip_info = intrigue
		ai_chance = {
			factor = 10000
		}
		
		hidden_tooltip = {
			FROM = {
				character_event = { id = 21016 days = 2 }
			}
		}
	}
}

# Husband's investigation fails
character_event = {
	id = 21011
	
	desc = EVTDESC21011
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA21011 # Damnation
		opinion = {
			who = FROM
			modifier = opinion_suspected_adultery
			months = 60
		}
	}
}

# Husband confronts wife directly
character_event = {
	id = 21012
	
	desc = EVTDESC21012
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA21012 # Deny
		ai_chance = {
			factor = 100
		}
		FROM = { character_event = { id = 21013 days = 1 } }
	}
	option = {
		name = EVTOPTB21012 # Tearfully confess
		trigger = {
			father_of_unborn = {
				NOT = { character = FROM }
			}
		}
		
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				trait = deceitful
			}
			modifier = {
				factor = 0
				trait = cruel
			}
			modifier = {
				factor = 10.0
				trait = kind
			}
			modifier = {
				factor = 10.0
				trait = just
			}
			modifier = {
				factor = 20.0
				opinion = {
					who = FROM
					value = 50
				}
			}
		}
		set_character_flag = confessed_adultery
		FROM = { character_event = { id = 21003 days = 1 } }
	}
	
	option = {
		name = EVTOPTC21012 # Skillfully manipulate him
		trigger = {
			OR = {
				intrigue = 12
				has_focus = focus_intrigue
				has_focus = focus_seduction
				has_character_modifier = wol_court_vixen
				trait = seductress
			}
			FROM = {
				NOT = { has_focus = focus_intrigue }
				NOT = { intrigue = 9 }
			}
		}
		tooltip_info = intrigue
		ai_chance = {
			factor = 10000
		}
		FROM = { character_event = { id = 21015 days = 1 } }
	}
}

# Wife denies. Husband's investigation fails.
character_event = {
	id = 21013
	
	desc = EVTDESC21013
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_alive = yes }
	}
	
	option = {
		name = EVTOPTA21013 # Alright
		opinion = {
			who = FROM
			modifier = opinion_suspected_adultery
			months = 60
		}
	}
}

# Wife caught. Consequences...
character_event = {
	id = 21003
	
	desc = { 
		text = EVTDESC21003_CR
		trigger = {
			FROM = {
				has_character_flag = spies_adultery
				father_of_unborn = {
					is_close_relative = PREV
				}
			}
		}
	}
	
	desc = { 
		text = EVTDESC21003
		trigger = {
			FROM = {
				has_character_flag = spies_adultery
				father_of_unborn = {
					NOT = { is_close_relative = PREV }
				}
			}
		}
	}
	
	desc = { 
		text = EVTDESC21003_CONF_CR
		trigger = {
			FROM = {
				has_character_flag = confessed_adultery
				father_of_unborn = {
					is_close_relative = PREV
				}
			}
		}
	}
	
	desc = { 
		text = EVTDESC21003_CONF
		trigger = {
			FROM = {
				has_character_flag = confessed_adultery
				father_of_unborn = {
					NOT = { is_close_relative = PREV }
				}
			}
		}
	}
	
	desc = { 
		text = EVTDESC21003_TRAP_CR
		trigger = {
			FROM = {
				has_character_flag = trap_adultery
				father_of_unborn = {
					is_close_relative = PREV
				}
			}
		}
	}
	
	desc = { 
		text = EVTDESC21003_TRAP
		trigger = {
			FROM = {
				has_character_flag = trap_adultery
				father_of_unborn = {
					NOT = { is_close_relative = PREV }
				}
			}
		}
	}
	
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_alive = yes }
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					has_character_flag = trap_adultery
					has_character_flag = spies_adultery
				}
			}
			if = {
				limit = {
					NOT = { trait = paranoid }
					NOT = { trait = trusting }
				}
				random = {
					chance = 10
					add_trait = paranoid
					hidden_tooltip = {
						character_event = { id = 38275 days = 3 } # Paranoid gained
					}
				}
			}
			
			if = {
				limit = { trait = trusting }
				random = {
					chance = 20
					remove_trait = trusting
					hidden_tooltip = {
						character_event = { id = 38306 days = 3 } # Trusting lost
					}
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA21003 # Keep this quiet
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				trait = wroth
			}
			modifier = {
				factor = 0
				trait = cruel
			}
			modifier = {
				factor = 0
				trait = envious
			}
			modifier = {
				factor = 0
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = just
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = temperate
			}
			modifier = {
				factor = 5
				trait = kind
			}
			modifier = {
				factor = 5
				trait = cynical
			}
		}
		
		FROM = {
			clr_character_flag = trap_adultery
			clr_character_flag = confessed_adultery
			clr_character_flag = spies_adultery
			
			reverse_opinion = {
				who = ROOT
				modifier = opinion_unfaithful_private
				months = 60
			}
			father_of_unborn = {
				reverse_opinion = {
					who = ROOT
					modifier = opinion_cuckolded_private
					months = 60
				}
			}
		}
	}
	
	option = {
		name = {
			text = EVTOPTB21003 # Unholy!
			trigger = {
				NOT = { religion = valyrian }
				OR = {
					NOT = { dynasty = FROM }
					NOT = {
						is_divine_blood_dynasty_trigger = yes
					}	
				}	
				FROM = {
					father_of_unborn = {
						is_close_relative = PREV
					}
				}
			}
		}
		name = {
			text = EVTOPTC21003 # Holy, but they are still traitors!
			trigger = {
				OR = {
					religion = valyrian
					AND = {
						dynasty = FROM
						is_divine_blood_dynasty_trigger = yes
					}
				}
				FROM = {
					father_of_unborn = {
						is_close_relative = PREV
					}
				}
			}
		}
		name = {
			text = EVTOPTD21003 # Traitors!
			trigger = {
				FROM = {
					father_of_unborn = {
						NOT = { is_close_relative = PREV }
					}
				}
			}
		}
		
		ai_chance = {
			factor = 100
		}
		
		hidden_tooltip = {
			FROM = {
				father_of_unborn = {
					save_event_target_as = target_adulterer
				}
				character_event = { id = 20 } # Adultery fallout
			}
		}
		
		FROM = {
			father_of_unborn = {
				hidden_tooltip = {
					character_event = { id = 21006 }
				}
			}
			
			hidden_tooltip = {
				if = {
					limit = { has_character_flag = spies_adultery }
					character_event = { id = 21005 }
				}
			}
			
			clr_character_flag = trap_adultery
			clr_character_flag = confessed_adultery
			clr_character_flag = spies_adultery
		}
	}
}

# Wife denies and manipulates husband.
character_event = {
	id = 21015
	
	desc = EVTDESC21015
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_alive = yes }
	}
	
	option = {
		name = EVTOPTA21015 # Alright
		
		opinion = {
			who = FROM
			modifier = opinion_regrets_accusation
			months = 36
		}
		
		if = {
			limit = {
				NOT = { trait = paranoid }
				NOT = { trait = trusting }
			}
			random = {
				chance = 20
				add_trait = trusting
				hidden_tooltip = {
					character_event = { id = 38250 } # Trusting gained
				}
			}
		}
		
		if = {
			limit = { trait = paranoid }
			random = {
				chance = 20
				remove_trait = paranoid
				hidden_tooltip = {
					character_event = { id = 38305 } # Paranoid lost
				}
			}
		}
	}
}

# Wife: husband has laid a trap
character_event = {
	id = 21016
	
	desc = EVTDESC21016
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	trigger = {
		FROM = { is_alive = yes }
	}
	
	option = {
		name = EVTOPTA21016 # That conniving bastard!
		
		set_character_flag = trap_adultery
		FROM = {
			character_event = { id = 21003 tooltip = EVTTOOLTIP21003_TRAP }
		}
	}
}

# The unfaithful wife is notified that the husband knows
character_event = {
	id = 21005
	desc = EVTDESC21005
	
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA21005 # Damn!
	}
}

# The adulterer is notified that the husband knows
character_event = {
	id = 21006
	desc = EVTDESC21006
	
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA21006 # Damn!
		trigger = { is_liege_or_above = FROM }
	}
	option = {
		name = EVTOPTB21006 # Damn!
		trigger = { NOT = { is_liege_or_above = FROM } }
	}
}

# The husband's wife comes clean about the pregnancy
character_event = {
	id = 40499
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC40499

	option = {
		name = EVTOPTA40499
		hidden_tooltip = {
			FROM = {
				father_of_unborn = {
					save_event_target_as = target_adulterer
				}
				character_event = { id = 20 } # Adultery fallout
			}
		}
		FROM = { 
			set_character_flag = flag_no_cuckoo
			father_of_unborn = { tooltip = { } } 
		}
	}
}

# Your lover comes clean about your affair
character_event = {
	id = 405
	picture = GFX_evt_scandal
	is_triggered_only = yes
	desc = "EVTDESC405"
	option = {
		name = "EVTOPTA405"
		character_event = { id = 64046 tooltip = "EVTTOOLTIP64045" }
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = deceitful
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -99 } }
			}
		}
	}
	
	option = {
		name = "EVTOPTB405"
		ai_chance = { factor = 50 }
	}
}

# Your lover is drinking moon tea to cover up the affair
character_event = {
	id = 406
	desc = "EVTDESC406"
	picture = GFX_evt_scandal
	is_triggered_only = yes
	
	option = {	
		name = "EVTOPTA406" #OK
		ai_chance = {
			factor = 75
			# Not ready to be a father
			modifier = {
				factor = 1.5
				NOT = { age = 20 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 19 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 18 }
			}
			modifier = {
				factor = 1.5
				NOT = { age = 17 }
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			modifier = {
				factor = 3
				trait = kind
			}		
			modifier = {
				factor = 3
				trait = humble
			}		
			modifier = {
				factor = 2
				FROM = {
					spouse = { higher_tier_than = ROOT }
				}
			}	
			modifier = {
				factor = 2
				any_liege = { is_married = FROM }
			}					
		}
		set_character_flag = flag_moon_tea
		hidden_tooltip = { opinion = { who = FROM modifier = opinion_using_moon_tea } }
	}
	
	option = {
		name = "EVTOPTB406"  #Protest
		ai_chance = {
			factor = 25
			modifier = {
				factor = 3
				trait = cruel
			}		
			modifier = {
				factor = 3
				trait = proud
			}
			modifier = {
				factor = 2
				is_ruler = yes
			}
			modifier = {
				factor = 2
				is_lover = FROM
			}
			modifier = {
				factor = 10
				OR = {
					has_ambition = obj_have_a_daughter
					has_ambition = obj_have_a_son
					has_ambition = obj_five_children
				}
			}
		}
		FROM = { character_event = { id = birth.50 days = 1 tooltip = TOOLTIPbirth.50 } }
	}
}
# Your lover protests moon tea 
character_event = {
	id = birth.50
	desc = "EVTDESCbirth.50"
	picture = GFX_evt_scandal
	is_triggered_only = yes
	
	option = {	
		name = "EVTOPTAbirth.50" #Fine
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 3
				trait = shy
			}
			modifier = {
				factor = 3
				trait = humble
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 2
				is_lover = FROM
			}
			modifier = {
				factor = 2
				FROM = { higher_tier_than = ROOT }
			}
			modifier = {
				factor = 2
				any_liege = { character = FROM }
			}
			modifier = {
				factor = 2
				FROM = { trait = authoritative }
			}
		}
		clr_character_flag = flag_stillbirth
		clr_character_flag = flag_moon_tea
		custom_tooltip = { text = TOOLTIPbirth.51 }
		if = {
			limit = {
				is_married = yes
				NOT = { is_married = FROM }
			}
			custom_tooltip = { text = TOOLTIPbirth.51B }
		}
		custom_tooltip = { text = TOOLTIPambition.13ENDLINE }
		hidden_tooltip = { FROM = { character_event = { id = birth.51 } } }
		if = {
			limit = { spouse = { NOT = { character = FROM } } }
			spouse = { character_event = { id = 403 tooltip = "EVTTOOLTIP403" } }
		}	
	}
	
	option = {
		name = "EVTOPTBbirth.50"  #No
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				trait = brave
			}
			modifier = {
				factor = 3
				trait = authoritative
			}
			modifier = {
				factor = 3
				trait = proud
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM value = -20 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM value = -40 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM value = -60 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM value = -80 } }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM value = -99 } }
			}
			modifier = {
				factor = 2
				higher_tier_than = FROM
			}
			modifier = {
				factor = 2
				FROM = { any_liege = { character = ROOT } }
			}
		}
		FROM = { 
			opinion = {
				who = ROOT
				modifier = opinion_aborted_my_child
			}
			hidden_tooltip = { opinion = { who = ROOT modifier = opinion_using_moon_tea } }
			if = {
				limit = { is_lover = ROOT }
				tooltip = { remove_lover = ROOT }
				if = {
					limit = {
						is_female = yes
					}
					set_character_flag = recent_lover
				}	
				tooltip = {	
					opinion = {
						who = ROOT
						modifier = opinion_former_lover
					}
					reverse_opinion = {
						who = ROOT
						modifier = opinion_former_lover
					}
				}	
				if = {
					limit = { has_ambition = obj_make_the_eight }
					hidden_tooltip = { character_event = { id = ambition.1 } }
				}			
			}
			hidden_tooltip = { character_event = { id = birth.52 } }
		}
	}
}
# Your lover agrees to not use moon tea 
character_event = {
	id = birth.51
	picture = GFX_evt_scandal
	is_triggered_only = yes
	
	desc = {
		text = EVTDESCbirth.51
		trigger = {
			FROM = {
				is_married = yes
				NOT = { is_married = ROOT }
			}
		}
	}
	
	desc = {
		text = EVTDESCbirth.51B
		trigger = {
			FROM = {
				OR = {
					is_married = no
					is_married = ROOT
				}	
			}
		}
	}
	
	option = {	
		name = "EVTOPTAbirth.51" 
		clr_character_flag = flag_moon_tea
		FROM = { 
			opinion = {
				who = ROOT
				modifier = opinion_coerced_into_having_child
			}
		}	
	}
}	
# Your lover refuses to not use moon tea 
character_event = {
	id = birth.52
	desc = "EVTDESCbirth.52"
	picture = GFX_evt_scandal
	is_triggered_only = yes
	
	option = {	
		name = "EVTOPTAbirth.52" 
		if = {
			limit = { is_lover = FROM }
			remove_lover = FROM
			if = {
				limit = {
					is_female = yes
				}
				set_character_flag = recent_lover
			}	
			opinion = {
				who = FROM
				modifier = opinion_former_lover
			}
			reverse_opinion = {
				who = FROM
				modifier = opinion_former_lover
			}
			if = {
				limit = { has_ambition = obj_make_the_eight }
				hidden_tooltip = { character_event = { id = ambition.1 } }
			}			
		}
	}
}	
# Your lover has chosen to pass your child off as her husband's
character_event = {
	id = 407
	desc = "EVTDESC407"
	picture = GFX_evt_scandal
	is_triggered_only = yes
	
	option = { name = "EVTOPTA407" }
}

# Consort: Pregnancy starts showing
character_event = {
	id = 410
	desc = EVTDESC410
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { trait = pregnant }
		father_of_unborn = {
			is_consort = ROOT
		}
		NOT = { has_character_flag = forced_child }
	}
	
	option = {
		name = OK
		add_trait = pregnant
		prestige = 10
		
		# Mark father's location
		hidden_tooltip = {
			if = {
				limit = { 
					father_of_unborn = { NOT = { at_location = ROOT } }
				}
				set_character_flag = flag_mysterious_conception_mother
			}
		}
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}	
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}
		if = {
			limit = {
				father_of_unborn = {
					is_alive = yes
				}
			}
			
			hidden_tooltip = {
				if = {
					limit = {
						father_of_unborn = {
							trait = paranoid
						}
					}
					random = {
						chance = 50
						father_of_unborn = { character_event = { id = 404 } }
						break = yes
					}
				}
				if = {
					limit = {
						father_of_unborn = {
							NOT = { trait = paranoid }
							NOT = { trait = trusting }
						}
					}
					random = {
						chance = 1
						father_of_unborn = { character_event = { id = 404 } }
						break = yes
					}
				}
			}
			
			father_of_unborn = { character_event = { id = 413 tooltip = EVTTOOLTIP413 } }
		}
	}
}

# Consort: Pregnancy with another father!
character_event = {
	id = 412
	desc = EVTDESC412
	picture = "GFX_evt_pregnancy"
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { trait = pregnant }
		is_consort = yes
		father_of_unborn = {
			NOT = {
				is_consort = ROOT		
			}
		}
	}
	
	# Option 3 - Pass Child Off as Legitimate
	option = {
		name = "EVTOPTC402"
		add_trait = pregnant
		if = {
			limit = { father_of_unborn = { character = 0 } } #father is unknown
			set_character_flag = bastard_father_unknown
		}
		consort = { character_event = { id = 404 tooltip = EVTTOOLTIP404 } }
		hidden_tooltip = { father_of_unborn = { character_event = { id = 407 } } }
		
		# Mark father's location
		hidden_tooltip = {
			if = {
				limit = { NOT = { consort = { at_location = ROOT } } }
				set_character_flag = flag_mysterious_conception_mother
			}
		}
		
		# Stillbirths, potentially
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 10 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 9 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 8 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 7 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 6 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 5 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 4 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 3 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 2 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					NOT = { has_character_flag = flag_stillbirth }
					NOT = { health = 1 }
				}
				random = {
					chance = 2
					set_character_flag = flag_stillbirth
				}
			}
		}
		hidden_tooltip  = {
			if = {
				limit = {	
					OR = {
						has_character_modifier = abomination_of_incest
						father_of_unborn = {
							OR = {
								has_character_modifier = abomination_of_incest
								sibling = ROOT
								any_child = { character = ROOT }
								mother = { character = ROOT }
							}
						}
					}	
				}
				character_event = { id = 370 days = 300 } 
			}
		}
	}
}

# The consort's liege is a proud father!
character_event = {
	id = 413
	picture = GFX_evt_pregnancy
	
	is_triggered_only = yes 
	
	desc = EVTDESC413

	option = {
		name = OK
		prestige = 5
	}
}

# The consort's liege suspects something ain't right
# character_event = {
	# id = 414
	# picture = GFX_evt_pregnancy
	
	# is_triggered_only = yes 
	
	# desc = EVTDESC414

	# option = {
		# name = EVTOPTA414
		# if = {
			# limit = {
				# FROM = {
					# father_of_unborn_known = yes
				# }
			# }
			# opinion = {
				# who = FROM
				# modifier = opinion_potential_cuckold
				# months = 7
			# }
			# FROM = { father_of_unborn = { reverse_opinion = { who = ROOT modifier = cuckolded months = 7 } } }
		# }
	# }
# }

#############################################
# EVENTS ON THE BIRTH OF A BASTARD CHILD
#############################################
# A child is born out of wedlock
character_event = {
	id = 300 
	picture = GFX_evt_birth
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { mother = { has_character_flag = flag_no_cuckoo } }
			mother = { clr_character_flag = flag_no_cuckoo }
			real_father_even_if_dead = {
				ROOT = { 
					set_father = PREV 
					set_character_flag = father_found
				} 
			}
			#Failsafe: if real father not found remove mother's spouse as father
			if = {
				limit = { NOT = { has_character_flag = father_found } }
				set_father = 0
				if = {
					limit = {
						NOR = {
							dynasty = 0
							mother_even_if_dead = { dynasty = PREV }
						}
					}
					dynasty = mother_bastard
				}
			}
			#move to correct court
			if = {
				limit = { mother = { is_alive = yes } }
				mother = { 
					if = {
						limit = { is_ruler = yes }
						ROOT = { move_character = PREV }
					}	
					if = {
						limit = { is_ruler = no }
						liege = { ROOT = { move_character = PREV } }
					}
				}	
			}
			if = {
				limit = { 
					mother = { is_alive = no } 
					father = { is_alive = yes }
				}
				father = { 
					if = {
						limit = { is_ruler = yes }
						ROOT = { move_character = PREV }
					}	
					if = {
						limit = { is_ruler = no }
						liege = { ROOT = { move_character = PREV } }
					}
				}	
			}
			clr_character_flag = father_found			
		}	
		if = {
			limit = {
				father_even_if_dead = { #no concept of bastardry
					culture = dothraki 
					OR = {
						is_ruler = yes
						liege = { culture = dothraki }
					}
					NOT = { 
						ROOT = {
							mother = {
								higher_tier_than = PREVPREV
								NOT = { culture = dothraki }						
							}
						}	
					}
				} 								
			}
			father_even_if_dead = { ROOT = { dynasty = PREV } }
			remove_trait = bastard		
			break = yes
		}	
		if = { #Mother may sometimes decide
			limit = {
				mother = {
					is_alive = yes
					OR = {
						AND = {
							is_ruler = yes
							OR = {
								primary_title = { has_law = true_cognatic_succession }
								tier = EMPEROR
							}	
							ROOT = { 
								OR = {
									father_even_if_dead = { ROOT = { mother = { higher_tier_than = PREVPREV } } }
									NOT = { father_even_if_dead = { always = yes } }
								}
							}	
						}
						AND = {
							is_ruler = yes
							primary_title = {
								OR = {
									has_law = enatic_cognatic_succession
									has_law = enatic_succession
								}
							}	
						}
						AND = {
							is_ruler = no
							liege = {
								primary_title = {
									OR = {
										has_law = enatic_cognatic_succession
										has_law = enatic_succession
									}
								}
							}	
						}
					}
				}
			}
			mother = { character_event = { id = 301 days = 1 } } # The mother's reaction
			break = yes
		}	
		father = {
			if = {
				limit = { is_alive = yes }
				character_event = { id = 301 days = 1 } # The father's reaction
				break = yes
			}
		}
		#No parents available
		add_trait = bastard
		bastard_nickname_mother_effect = yes
	}

	option = {
		name = OK
	}
}

# The father reacts to the bastard birth (mother if female enatic/cognatic)
character_event = {
	id = 301
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	desc = {
		text = EVTDESC301
		trigger = { FROM = { is_alive = yes } }
	}
	desc = {
		text = EVTDESC301B
		trigger = { FROM = { is_alive = no } }
	}
	
	trigger = { FROM = { is_child_of = ROOT } }
	
	option = {
		name = EVTOPTA301 # Legitimize the child
		trigger = { 
			NOT = { trait = bastard } 
			NOT = { dynasty = 0 }
			OR = { #Does not have a trait that precludes inheritance
				is_married = yes
				is_betrothed = yes
				can_marry = yes
				trait = widowed
			}
		}
		ai_chance = {
			factor = 5
			
			modifier = {
				factor = 0.5
				FROM = { is_alive = no }
			}
			modifier = {
				factor = 3
				age = 35
				NOT = { any_child = { is_alive = yes } }
				FROM = { is_alive = yes }
			}
			modifier = {
				factor = 3
				age = 35
				NOT = { any_child = { is_alive = yes is_female = no } }
				FROM = { is_female = no is_alive = yes }
			}
			modifier = {
				factor = 2
				trait = familyperson
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = lunatic
			}
		}
		piety = -10
		FROM = {
			legitimise_newborn_FROM_effect = yes # The child gets the father's dynasty
			if = {
				limit = { 
					ROOT = { 
						is_female = no
						NOT = { culture = summer_islander } #Promiscious culture does not care
					} 
				} 
				mother = {
					character_event = { id = 303 tooltip = EVTTOOLTIP303 } # The child's mother is very pleased
					any_spouse = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304 } # The child's mother's husband is pissed off
					}
					consort = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304 } # The child's mother's lord is pissed off
					}			
				}
			}
			if = {
				limit = { 
					ROOT = { 
						is_female = yes
						NOT = { culture = summer_islander } #Promiscious culture does not care
					} 
				} 
				father = {
					character_event = { id = 303 tooltip = EVTTOOLTIP303A } # The child's father is very pleased
					any_spouse = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304A } # The child's father's wife is pissed off
					}		
				}
			}			
		}
		if = {
			limit = { ROOT = { NOT = { culture = summer_islander } } }#Promiscious culture does not care
			any_child = {
				limit = {
					NOT = { character = FROM }
					dynasty = ROOT
					NOT = { trait = bastard }
				}
				opinion = {
					who = ROOT
					modifier = legitimized_bastard
					months = 60
				}
			}
		}	
		recalc_succession = yes
	}
	
	option = {
		name = EVTOPTB301 # Acknowledge the child
		ai_chance = {
			factor = 30
			
			modifier = {
				factor = 0.5
				FROM = { is_alive = no }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 100 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 75 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 50 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 25 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { is_female = no }
			}
			modifier = {
				factor = 3
				trait = familyperson
			}
			modifier = {
				factor = 3
				trait = humble
			}
			modifier = {
				factor = 3
				trait = kind
			}
			modifier = {
				factor = 3
				trait = honorable
			}
			modifier = {
				factor = 3
				trait = just
			}
		}
		piety = -10
		FROM = {
			acknowledge_newborn_FROM_effect = yes # The child gets the father's dynasty, but is not legitimized.
			if = {
				limit = { 
					ROOT = { 
						is_female = no
						NOT = { culture = summer_islander } #Promiscious culture does not care
					} 
				} 	
				mother = {
					character_event = { id = 307 tooltip = EVTTOOLTIP307 } # The child's mother is pleased
					any_spouse = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304 } # The child's mother's husband is pissed off
					}
					consort = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304 } # The child's mother's lord is pissed off
					}				
				}
			}
			if = {
				limit = { 
					ROOT = { 
						is_female = yes
						NOT = { culture = summer_islander } #Promiscious culture does not care
					} 
				} 	
				father = {
					character_event = { id = 307 tooltip = EVTTOOLTIP307A } # The child's father is pleased
					any_spouse = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304A } # The child's father's wife is pissed off
					}			
				}
			}			
		}
		if = {
			limit = { trait = nightswatch }
			piety = -75
			add_character_modifier = {
				name = NW_broken_vows
				duration = 365
			}
		}
		recalc_succession = yes
	}
	
	option = {
		name = EVTOPTC301 # Denounce the child
		trigger = { is_female = no } 
		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -24 } } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -49 } } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -74 } } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -99 } } } }
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = selfish
			}
		}
		piety = -10		
		FROM = {
			denounce_newborn_FROM_effect = yes #  The child founds a new bastard dynasty
			if = {
				limit = { ROOT = { NOT = { culture = summer_islander } } }#Promiscious culture does not care
				mother = {
					character_event = { id = 310 tooltip = EVTTOOLTIP310 } # The child's mother is dishonoured
					any_spouse = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304 } # The child's mother's husband is pissed off
					}	
					consort = {
						character_event = { id = 304 tooltip = EVTTOOLTIP304 } # The child's mother's lord is pissed off
					}				
				}
			}	
		}
		recalc_succession = yes
	}
}

# The child's mother is very pleased
character_event = {
	id = 303
	
	is_triggered_only = yes 
	desc = EVTDESC303
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_intrigue

	option = {
		name = EVTOPTA303
		opinion = {
			who = FROM
			modifier = legitimized_child
			years = 10
		}
	}
}

# The child's mother's husband is pissed off
character_event = {
	id = 304
	picture = GFX_evt_quarrel	
	border = GFX_event_normal_frame_intrigue
	
	desc = {
		text = EVTDESC304
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESC304B
		trigger = { is_female = yes }
	}
	
	is_triggered_only = yes 

	option = {
		name = EVTOPTA304
		# if = {
			# limit = { NOT = { has_opinion_modifier = { who = FROM modifier = cuckolded } } }
			# opinion = {
				# who = FROM
				# modifier = cuckolded
			# }
		# }
		FROM = {
			FROM = {
				reverse_opinion = {
					who = ROOT
					modifier = opinion_cuckold_child
					years = 100
				}
				# if = {
					# limit = { ROOT = { is_female = no } }
					# mother = {
						# if = {
							# limit = { NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = unfaithful } } }
							# reverse_opinion = {
								# who = ROOT
								# modifier = unfaithful
							# }
						# }	
					# }
				# }
				if = {
					limit = { ROOT = { is_female = yes } }
					father = {
						if = {
							limit = { NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband } } }
							reverse_opinion = {
								who = ROOT
								modifier = opinion_unfaithful_husband
							}
						}
					}
				}					
			}
		}
		#AI might imprison cuckcolder
		FROM = {
			if = {
				limit = {
					ROOT = {
						is_ruler = yes
						ai = yes
					}	
					is_liege_or_above = ROOT
					prisoner = no
				}
				save_event_target_as = imprison_target
				ROOT = { character_event = { id = imprisoned.1 days = 1 } }
			}
		}	
	}
}

# The father's wife is enraged
character_event = {
	id = 305
	desc = EVTDESC305
	picture = GFX_evt_quarrel
	
	is_triggered_only = yes 
	show_from_from = yes
	
	trigger = { NOT = { culture = summer_islander } }

	option = {
		name = EVTOPTA305
		FROMFROM = {
			if = {
				limit = { ROOT = { is_female = yes } }	
				mother = {
					reverse_opinion = {
						who = ROOT
						modifier = slut_seductress
						years = 20
					}
				}
			}
			# if = {
				# limit = { ROOT = { is_female = no } }	
				# father = {
					# reverse_opinion = {
						# who = ROOT
						# modifier = slut_seductress
						# years = 20
					# }
				# }
			# }
			reverse_opinion = {
				who = ROOT
				modifier = opinion_cuckold_child
				years = 100
			}			
		}
		
		FROM = {
			reverse_opinion = {
				who = ROOT
				modifier = legitimized_bastard
				years = 20
			}
		}
	}
}

# The child's mother is pleased
character_event = {
	id = 307
	
	is_triggered_only = yes 
		
	desc = EVTDESC307
	picture = GFX_evt_birth

	option = {
		name = EVTOPTA307
		opinion = {
			who = FROM
			modifier = acknowledged_child
			years = 10
		}
	}
}

# The father's wife is angered
character_event = {
	id = 308
	picture = GFX_evt_quarrel
	
	is_triggered_only = yes 
	show_from_from = yes
	
	trigger = { NOT = { culture = summer_islander } }
		
	desc = {
		text = EVTDESC308
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESC308B
		trigger = { is_female = yes }
	}

	option = {
		name = EVTOPTA308
		FROMFROM = {
			if = {
				limit = { ROOT = { is_female = yes } }	
				mother = {
					reverse_opinion = {
						who = ROOT
						modifier = slut_seductress
						years = 20
					}
				}
			}
			# if = {
				# limit = { ROOT = { is_female = no } }	
				# father = {
					# reverse_opinion = {
						# who = ROOT
						# modifier = slut_seductress
						# years = 20
					# }
				# }
			# }	
			reverse_opinion = {
				who = ROOT
				modifier = opinion_cuckold_child
				years = 100
			}			
		}
		
		FROM = {
			reverse_opinion = {
				who = ROOT
				modifier = acknowledged_bastard
				years = 10
			}
		}
	}
}

# The child's mother is dishonoured
character_event = {
	id = 310
	picture = GFX_evt_quarrel
	
	is_triggered_only = yes 
		
	desc = EVTDESC310

	option = {
		name = EVTOPTA310
		opinion = {
			who = FROM
			modifier = denounced_child
			years = 10
		}
	}
}

# The father's wife is displeased
character_event = {
	id = 311
	picture = GFX_evt_quarrel
	
	is_triggered_only = yes 
	show_from_from = yes
		
	desc = EVTDESC311
	
	trigger = { NOT = { culture = summer_islander } }

	option = {
		name = EVTOPTA311
		FROMFROM = {
			mother = {
				reverse_opinion = {
					who = ROOT
					modifier = slut_seductress
					years = 20
				}
			}
			reverse_opinion = {
				who = ROOT
				modifier = opinion_cuckold_child
				years = 100
			}
		}
		
		FROM = {
			reverse_opinion = {
				who = ROOT
				modifier = opinion_unfaithful_husband
			}
		}
	}
}
#Child of consort is born
character_event = {
	id = 312000
	desc = "EVTDESC312"
	picture = "GFX_evt_birth"
	
	is_triggered_only = yes 	
	
	immediate = {
		#mother = { ROOT = { dynasty = PREV } }
		if = {
			limit = { #is not a child of a targ polygamy marriage
				OR = {
					NOT = { father_even_if_dead = { dynasty = 496 } }
					NOT = { mother = { has_character_flag = targ_wife } }
				}	
			}
			father_even_if_dead = {
				if = {
					limit = { 
						NOT = { religion = the_seven }
						NOT = { culture = eastern_valyrian }
					}
					ROOT = { add_trait = child_of_consort }
				}
				if = {
					limit = { religion = drowned_god }
					character_event = { id = 312001 days = 1 } # The father's reaction
				}			
				if = {
					limit = { 
						NOT = { religion = drowned_god }
						OR = {
							religion = the_seven 
							culture = eastern_valyrian
						}	
					}
					character_event = { id = 312001 days = 1 } # The father's reaction
					if = {
						limit = { is_alive = no }
						ROOT = {
							add_trait = bastard
							if = {
								limit = { NOT = { dynasty = 0 } }
								dynasty = mother_bastard
							}	
							bastard_nickname_mother_effect = yes
							set_father = 0
							set_real_father = PREV
						}
					}	
				}	
			}
		}	
		if = {
			limit = {
				real_father = {
					is_alive = yes
					ROOT = {
						father = {
							NOT = { character = PREVPREV }
						}
					}
				}
			}
			real_father = {
				character_event = { id = 319 days = 1 } # The real father is notified
			}
		}
	}
	
	option = {
		name = "EVTOPTA12"
	}
}

# The father reacts to the consort birth
character_event = {
	id = 312001
	picture = GFX_evt_birth
	
	is_triggered_only = yes
	
	trigger = { FROM = { is_child_of = ROOT } }
	
	desc = {
		text = EVTDESC312001 #Drowned God
		trigger = { 
			religion = drowned_god 
			FROM = { is_alive = yes }
		}
	}
	desc = {
		text = EVTDESC312001B #Drowned God
		trigger = { 
			religion = drowned_god 
			FROM = { is_alive = no }
		}
	}
	desc = {
		text = EVTDESC312002 #Dornish Paramour
		trigger = { 
			NOT = { religion = drowned_god }
			FROM = { is_alive = yes }
		}
	}
	desc = {
		text = EVTDESC312002B #Dornish Paramour
		trigger = { 
			NOT = { religion = drowned_god }
			FROM = { is_alive = no }
		}
	}
	
	option = { # Ironborn child
		name = {
			text = EVTOPTD301
			trigger = { FROM = { is_alive = yes } }
		}
		name = {
			text = EVTOPTD301B
			trigger = { FROM = { is_alive = no } }
		}
		trigger = { 
			religion = drowned_god
		}
		FROM = { 
			dynasty = ROOT 
			add_trait = bastard
			recalc_succession = yes
		}
		recalc_succession = yes
	}
	
	option = {
		name = EVTOPTA301 # Legitimize the child
		trigger = { 
			NOT = { trait = bastard } 
			NOT = { dynasty = 0 }
			NOT = { religion = drowned_god }
			OR = { #Does not have a trait that precludes inheritance
				is_married = yes
				is_betrothed = yes
				can_marry = yes
				trait = widowed
			}
		}
		ai_chance = {
			factor = 5
			
			modifier = {
				factor = 0.5
				FROM = { NOT = { graphical_culture = ROOT } }
			}
			modifier = {
				factor = 0.1
				culture = eastern_valyrian
				FROM = { NOT = { graphical_culture = ROOT } }
			}
			modifier = {
				factor = 0.5
				FROM = { is_alive = no }
			}
			modifier = {
				factor = 3
				age = 35
				NOT = { any_child = { is_alive = yes } }
				FROM = { is_alive = yes }
			}
			modifier = {
				factor = 3
				age = 35
				NOT = { any_child = { is_alive = yes is_female = no } }
				FROM = { is_female = no is_alive = yes }
			}
			modifier = {
				factor = 2
				trait = familyperson
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = lunatic
			}
		}
		FROM = {
			legitimise_newborn_FROM_effect = yes # The child gets the father's dynasty			
			mother = {
				character_event = { id = 303 tooltip = EVTTOOLTIP303 } # The child's mother is very pleased		
			}
		}
		any_child = {
			limit = {
				NOT = { character = FROM }
				dynasty = ROOT
				NOT = { trait = bastard }
			}
			opinion = {
				who = ROOT
				modifier = legitimized_bastard
				months = 60
			}
		}
		recalc_succession = yes
	}
	
	option = {
		name = EVTOPTB301 # Acknowledge the child
		trigger = { NOT = { religion = drowned_god } }
		ai_chance = {
			factor = 60
			
			modifier = {
				factor = 0.75
				culture = eastern_valyrian
				FROM = { NOT = { graphical_culture = ROOT } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 100 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 75 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 50 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { reverse_opinion = { who = ROOT value = 25 } } }
			}
			modifier = {
				factor = 1.5
				FROM = { is_female = no }
			}
			modifier = {
				factor = 3
				trait = familyperson
			}
			modifier = {
				factor = 3
				trait = humble
			}
			modifier = {
				factor = 3
				trait = kind
			}
			modifier = {
				factor = 3
				trait = honorable
			}
			modifier = {
				factor = 3
				trait = just
			}
		}
		# trigger = {
			# FROM = {
				# is_female = no
			# }
		# }
		FROM = {
			add_trait = bastard
			recalc_succession = yes
			acknowledge_newborn_FROM_effect = yes # The child gets the father's dynasty, but is not legitimized.
			mother = {
				character_event = { id = 307 tooltip = EVTTOOLTIP307 } # The child's mother is pleased			
			}
		}
		recalc_succession = yes
	}
	
	option = {
		name = EVTOPTC301 # Denounce the child
		trigger = { NOT = { religion = drowned_god } }
		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -24 } } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -49 } } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -74 } } } }
			}
			modifier = {
				factor = 1.5
				FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = -99 } } } }
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = selfish
			}
		}
		FROM = {
			add_trait = bastard
			recalc_succession = yes
			denounce_newborn_FROM_effect = yes #  The child founds a new bastard dynasty
			mother = {
				character_event = { id = 310 tooltip = EVTTOOLTIP310 } # The child's mother is dishonoured			
			}
		}
		recalc_succession = yes
	}
}
# #Child of forbidden marriage is born
# character_event = {
	# id = 312150 #MERGED with birth.990
	# desc = "EVTDESC312"
	# picture = "GFX_evt_birth"
	
	# is_triggered_only = yes 	
# }
# On-action event: Birth complications
character_event = {
	id = 313
	desc = OK
	
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { age = 1 }
	}

	immediate = {
		random_list = {
			90 = {
				# All is well
			}
			10 = {
				add_trait = sickly
				#Sickly infant treatment event
				if = {
					limit = { 
						has_dlc = "Reapers" 
						host = {
							job_spiritual = { always = yes }
						}
					}

					save_event_target_as = sickly_infant
					father = { save_event_target_as = sickly_father }

					#Decided which parent will choose treatment
					if = { 
						limit = { 
							father = { is_ruler = yes } 
							host = { character = event_target:sickly_father }
							NOT = { mother = { is_ruler = yes } }
						}
						father = { save_event_target_as = infant_guardian }
					}

					if = { 
						limit = { 
							NOT = {
								father = { is_ruler = yes } 
								host = { character = event_target:sickly_father }
								NOT = { mother = { is_ruler = yes } }
							}
						}
						mother = { save_event_target_as = infant_guardian }
					}

					#Makes court physician examine child
					host = { 
						job_spiritual = {
							character_event = { id = RIP.11066 days = 7 }
						}
					}
				}
			}
		}
	}

	option = { # No complications
		name = OK
		ai_chance = {
			factor = 120
			modifier = {
				factor = 2.0
				mother = {
					health = 6
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					health = 7
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					num_of_children = 3
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					trait = strong
				}
			}
			modifier = {
				factor = 1.2
				mother = { age = 20 }
			}
			modifier = {
				factor = 1.2
				mother = { age = 25 }
			}
			modifier = {
				factor = 1.2
				mother = { age = 30 }
			}
			modifier = {
				factor = 1.3
				liege = {
					job_spiritual = {
						learning = 10
					}
				}
			}
			modifier = {
				factor = 1.3
				liege = {
					job_spiritual = {
						learning = 14
					}
				}
			}
			modifier = {
				factor = 1.5
				liege = {
					job_spiritual = {
						learning = 18
					}
				}
			}
		}
	}
	option = { # Mother gets ill
		name = OK
		ai_chance = {
			factor = 8
			modifier = {
				factor = 0
				mother = {
					trait = pneumonic
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					NOT = { health = 4.1 }
				}
			}
			modifier = {
				factor = 1.5
				mother = {
					NOT = { num_of_children = 2 }
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					trait = weak
				}
			}
		}
		
		mother = {
			if = {
				limit = {
					is_ill = yes
				}
				character_event = { id = 316 }
			}
			if = {
				limit = {
					is_ill = no
				}
				character_event = { id = 315 }
			}
		}
	}
	option = { # Mother gets pneumonia
		name = OK
		ai_chance = {
			factor = 4
			
			modifier = {
				factor = 2.0
				mother = {
					NOT = { health = 4.1 }
				}
			}
			modifier = {
				factor = 6.0
				mother = {
					NOT = { health = 3.1 }
				}
			}
			modifier = {
				factor = 1.5
				mother = {
					NOT = { num_of_children = 2 }
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					trait = weak
				}
			}
		}
		
		mother = {
			if = {
				limit = {
					OR = {
						trait = pneumonic 
						has_epidemic = yes
					}
				}
				red_god_resurrect_effect = yes #check for rhllor resurrection
				death = {
					death_reason = death_childbirth
				}
			}
			if = {
				limit = {
					NOT = {
						OR = {
							trait = pneumonic 
							has_epidemic = yes
						}
					}
				}
				character_event = { id = 316 }
			}
		}
	}
	option = { # Mother dies
		name = OK
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2.0
				mother = {
					NOT = { health = 4.1 }
				}
			}
			modifier = {
				factor = 6.0
				mother = {
					NOT = { health = 3.1 }
				}
			}
			modifier = {
				factor = 1.5
				mother = {
					NOT = { num_of_children = 2 }
				}
			}
			modifier = {
				factor = 2.0
				mother = {
					trait = weak
				}
			}
		}
		mother = {
			red_god_resurrect_effect = yes #check for rhllor resurrection
			death = {
				death_reason = death_childbirth
			}
		}
	}
}

# # On-action event: Birth complications after a stillbirth
# character_event = {
	# id = 314
	# desc = OK
	
	# hide_window = yes
	
	# is_triggered_only = yes
	
	# trigger = {
		# age = 1
	# }
	
	# option = { # No complications
		# name = OK
		# ai_chance = {
			# factor = 66
			# modifier = {
				# factor = 2.0
				# health = 6
			# }
			# modifier = {
				# factor = 2.0
				# health = 7
			# }
			# modifier = {
				# factor = 2.0
				# num_of_children = 3
			# }
			# modifier = {
				# factor = 1.2
				# age = 20
			# }
			# modifier = {
				# factor = 1.2
				# age = 25
			# }
			# modifier = {
				# factor = 1.2
				# age = 30
			# }
		# }
	# }
	# option = { # Mother gets ill
		# name = OK
		# ai_chance = {
			# factor = 22
			# modifier = {
				# factor = 0
				# trait = pneumonic
			# }
			# modifier = {
				# factor = 2.0
				# NOT = { health = 4.1 }
			# }
			# modifier = {
				# factor = 1.5
				# NOT = { num_of_children = 2 }
			# }
		# }
		
		# if = {
			# limit = {
				# is_ill = yes
			# }
			# character_event = { id = 315 }
		# }
		# if = {
			# limit = {
				# NOT = { is_ill = yes }
			# }
			# character_event = { id = 314 }
		# }
	# }
	# option = { # Mother gets pneumonia
		# name = OK
		# ai_chance = {
			# factor = 10
			
			# modifier = {
				# factor = 2.0
				# NOT = { health = 4.1 }
			# }
			# modifier = {
				# factor = 6.0
				# NOT = { health = 3.1 }
			# }
			# modifier = {
				# factor = 1.5
				# NOT = { num_of_children = 2 }
			# }
		# }
		
		# if = {
			# limit = {
				# OR = {
					# trait = pneumonic 
					# has_epidemic = yes
				# }
			# }
			# red_god_resurrect_effect = yes #check for rhllor resurrection
			# death = {
				# death_reason = death_childbirth
			# }
		# }
		# if = {
			# limit = {
				# NOT = {
					# OR = {
						# trait = pneumonic 
						# has_epidemic = yes
					# }
				# }
			# }
			# character_event = { id = 315 }
		# }
	# }
	# option = { # Mother dies
		# name = OK
		# ai_chance = {
			# factor = 2
			# modifier = {
				# factor = 2.0
				# NOT = { health = 4.1 }
			# }
			# modifier = {
				# factor = 6.0
				# NOT = { health = 3.1 }
			# }
			# modifier = {
				# factor = 1.5
				# NOT = { num_of_children = 2 }
			# }
		# }
		# red_god_resurrect_effect = yes #check for rhllor resurrection
		# death = {
			# death_reason = death_childbirth
		# }
	# }
# }

# Mother ill after giving birth
character_event = {
	id = 315
	desc = EVTDESC315
	picture = GFX_evt_illness
	
	is_triggered_only = yes
	
	# immediate = {
		# add_trait = ill
	# }

	option = {
		name = EVTOPTA315
		if = {
			limit = {
				NOT = {
					has_dlc = "Reapers"
				}
			}
			add_trait = ill
		}
		if = {
			limit = {
				has_dlc = "Reapers"
			}
			add_symptom_effect = yes
		}
	}
}

# Mother pneumonic after giving birth
character_event = {
	id = 316
	desc = EVTDESC315
	picture = GFX_evt_illness
	
	is_triggered_only = yes
	
	# immediate = {
		# add_trait = pneumonic
	# }

	option = {
		name = EVTOPTA315
		if = {
			limit = {
				NOT = {
					has_dlc = "Reapers"
				}
			}
			add_trait = pneumonic
		}
		if = {
			limit = {
				has_dlc = "Reapers"
			}
			random_list = {
				10 = {
					modifier = {
						factor = 0
							trait = cough
					}
					character_event = { id = RIP.5000 }
				}
				10 = {
					modifier = {
						factor = 0
							trait = fever

					}
					character_event = { id = RIP.5001 }
				}
				10 = {
					modifier = {
						factor = 0
						trait = chest_pain
					}				
				character_event = { id = RIP.5005 }
				}
			}
		}
	}
}
	
# # On-action event: A bastard child is born, but is not recognized as such by the spouse of the mother
# character_event = { #MERGED with birth.990
	# id = 318
	# desc = "EVTDESC318"
	# picture = "GFX_evt_birth"
	
	# is_triggered_only = yes 
# }

# Ping the mother
character_event = {
	id = 317
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		clr_character_flag = bastard_father_unknown
		FROM = {
			real_father = {
				character_event = { id = 319 }
			}
		}
	}
	option = {
		name = OK
	}
}

character_event = {
	id = 319
	desc = EVTDESC319
	picture = GFX_evt_birth
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA319
		piety = -1
		
		# Just to get the portraits
		FROMFROM = {
			tooltip = { }
		}
		FROMFROM = {
			father_even_if_dead = {
				tooltip = { }
			}
		}
	}
}

# A courtier initiates romance with another courtier
character_event = {
	id = 371
	desc = "EVTDESC450"
	picture = "GFX_evt_lovers"
	
	is_triggered_only = yes	
	min_age = 16
	max_age = 65
	capable_only = yes
	prisoner = no
	
	trigger = {
		is_ruler = no
		OR = {
			is_female = no
			NOT = { age = 40 }
		}
		has_lover = no
		is_pregnant = no
		is_consort = no
		is_ill = no
		NOT = { trait = infirm }
		NOT = { trait = incapable }
		NOT = { trait = celibate }
		NOT = { trait = eunuch }
		NOT = { trait = dragon }
		NOT = { is_inaccessible_trigger = yes }
		OR = {
			is_married = no
			NOT = { trait = chaste }
		}
		liege = { # otherwise we get too many unnecessary children in the game
			OR = {			
				ai = no		
				higher_tier_than = DUKE
			}
		}
		# Faithful spouses don't cheat
		OR = {
			trait = lustful
			trait = deceitful
			trait = arbitrary
			AND = {
				OR = {
					is_married = no
					spouse = { NOT = { reverse_opinion = { who = ROOT value = 0 } } }
				}	
				OR = {
					is_consort = no
					consort = { NOT = { reverse_opinion = { who = ROOT value = 0 } } }
				}
			}		
		}
	}
	
	
	weight_multiplier = {
		days = 1

		modifier = {
			factor = 2.0
			has_ambition = obj_make_the_eight
		}
		modifier = {
			factor = 3.0
			has_ambition = obj_find_lover
		}
		modifier = {
			factor = 1.5
			spouse = { is_ruler = yes }
		}
		modifier = {
			factor = 0.5
			spouse = { has_lover = yes }
		}
		modifier = {
			factor = 2.0
			NOT = { age = 30 }
			spouse = { age = 50 }
		}		
		modifier = {
			factor = 4.0
			trait = homosexual #to balance for fewer potential lovers
		}	
		modifier = {
			factor = 1.5
			NOT = { age = 20 }
		}
		modifier = {
			factor = 0.5
			age = 30
		}
		modifier = {
			factor = 2.0
			trait = hedonist
		}	
		modifier = {
			factor = 2.0
			trait = lustful
		}	
		modifier = {
			factor = 2.0
			trait = fair
		}
		modifier = {
			factor = 0.5
			trait = ugly
		}
		modifier = {
			factor = 0.1
			trait = chaste
		}
		
		# Harems are well guarded...
		modifier = {
			factor = 0.33
			is_female = yes
			is_married = yes
			has_polygamy = yes
		}
		
		# Wives and Concubines of rulers have a harder time initiating this (unless it's their Focus)
		modifier = {
			factor = 0.33
			is_female = yes
			NOT = { has_focus = focus_seduction }
			liege = {
				OR = {
					is_consort = ROOT
					any_spouse = {
						character = ROOT
					}
				}
			}
		}
	}

	option = {
		name = "EVTOPTA450"
		liege = { 
			random_courtier = {
				limit = {
					OR = {
						is_ruler = no
						at_location = ROOT				
					}
					NOT = { character = PREV }
					has_lover = no
					is_pregnant = no
					prisoner = no
					is_ill = no
					age = 16
					OR = {
						is_female = no
						NOT = { age = 40 }
					}
					NOT = { trait = infirm }
					NOT = { trait = incapable }
					NOT = { trait = celibate }
					NOT = { trait = eunuch }
					NOT = { is_inaccessible_trigger = yes }
					OR = {
						is_married = no
						NOT = { trait = chaste }
					}
					OR = { #If liege is relative must either be lustful, Valyrian or Targaryen
						AND = {
							NOT = { is_child_of = ROOT }
							NOT = { mother_even_if_dead = { is_child_of = ROOT } }
							NOT = { father_even_if_dead = { is_child_of = ROOT } }
							ROOT = {
								NOT = { is_child_of = PREV }
								NOT = { mother_even_if_dead = { is_child_of = PREVPREV } }
								NOT = { father_even_if_dead = { is_child_of = PREVPREV } }
							}
						}
						ROOT = { 
							trait = lustful 
							NOT = { trait = honorable }
						}								
						AND = {
							ROOT = { religion = valyrian }
							religion = valyrian
						}
						AND = {
							dynasty = ROOT
							is_divine_blood_dynasty_trigger = yes
						}
					}
					#Gender must match liege's sexuality
					OR = {
						AND = {
							NOT = { trait = homosexual }
							ROOT = { NOT = { trait = homosexual } }
							NOT = { same_sex = ROOT }
						}
						AND = {
							trait = homosexual
							ROOT = { trait = homosexual }
							same_sex = ROOT
						}			
						#Dornish need not be homosexual if lustful
						culture_group = dornish
						culture_group = ROOT
						trait = lustful	
					}		
					NOT = {
						has_character_modifier = lustful_affair_timer
					}
					NOT = {
						has_opinion_modifier = {
							who = ROOT
							modifier = opinion_former_lover
						}
					}
					NOT = { is_married = ROOT }
					opinion = { who = ROOT value = -20 }
					reverse_opinion = { who = ROOT value = -20 }	
					NOT = {
						is_former_lover = ROOT
					}
					# Faithful spouses don't cheat
					OR = {
						trait = lustful
						trait = deceitful
						trait = arbitrary
						AND = {
							OR = {
								is_married = no
								spouse = { NOT = { reverse_opinion = { who = ROOT value = 0 } } }
							}	
							OR = {
								is_consort = no
								consort = { NOT = { reverse_opinion = { who = ROOT value = 0 } } }
							}
						}		
					}					
				}	
				character_event = { id = 451 tooltip = EVTTOOLTIP451 } 				
			}		
		}
	}
}
# Child is born of incest! (AGOT)
character_event = {
	id = 370
	picture = "GFX_evt_pregnancy"
	
	is_triggered_only = yes
	
	trigger = {
		any_child = {
			is_alive = yes
			NOT = { trait = dragon }
			NOT = { has_character_modifier = abomination_of_incest }
			NOT = { has_character_modifier = grandchild_of_incest }
			OR = {
				ROOT = { has_character_modifier = abomination_of_incest }
				father_even_if_dead = {
					OR = {
						has_character_modifier = abomination_of_incest
						sibling = ROOT
						any_child = { 
							OR = {
								character = ROOT 
								any_child = { character = ROOT }
							}	
						}
						is_child_of = ROOT
						mother_even_if_dead = { is_child_of = ROOT }
						father_even_if_dead = { is_child_of = ROOT }
					}
				}
			}
		}	
	}
	
	desc = "EVTDESC370"

	option = {
		name = "EVTOPTA370"
		any_child = {
			limit = {
				is_alive = yes
				NOT = { trait = dragon }
				NOT = { has_character_modifier = abomination_of_incest }
				NOT = { has_character_modifier = grandchild_of_incest }
			}
			if = {
				limit = {
					father_even_if_dead = {
						OR = {
							sibling = ROOT
							any_child = { 
								OR = {
									character = ROOT 
									any_child = { character = ROOT }
								}	
							}
							is_child_of = ROOT
							mother_even_if_dead = { is_child_of = ROOT }
							father_even_if_dead = { is_child_of = ROOT }
						}
					}
				}
				add_character_modifier = {
					name = "abomination_of_incest"
					duration = -1
				}
				break = yes
			}
			if = {
				limit = {
					OR = {
						father_even_if_dead = { has_character_modifier = abomination_of_incest }
						ROOT = { has_character_modifier = abomination_of_incest }
					}
				}
				add_character_modifier = {
					name = "grandchild_of_incest"
					duration = -1
				}
			}
		}	
	}
}

# A child is stillborn! (AGOT)
# character_event = {
	# id = 380 #MERGED WITH BIRTH.990
	# picture = "GFX_evt_death"
	# is_triggered_only = yes

	# option = {
		# name = OK
	# }
# }

character_event = {
	id = 381
	picture = "GFX_evt_death"
	desc = "EVTDESC381"
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { ai = no }
			if = {
				limit = { FROM = { trait = bastard } }
				chronicle = {
					entry = CHRONICLE_BIRTH_STILLBORN_BASTARD
					portrait = [From.GetID]
				}
				break = yes					
			}
			if = {
				limit = { FROM = { trait = child_of_consort } }
				chronicle = {
					entry = CHRONICLE_BIRTH_STILLBORN_CONSORT
					portrait = [From.GetID]
				}
				break = yes	
			}
			chronicle = {
				entry = CHRONICLE_BIRTH_STILLBORN
				portrait = [From.GetID]
			}
			break = yes
		}	
	}
	
	option = {
		name = {
			text = "EVTOPTA381"
			trigger = { NOT = { has_character_flag = flag_moon_tea } }
		}	
		name = {
			text = "EVTOPTA381B"
			trigger = { has_character_flag = flag_moon_tea }
		}
		ai_chance = {
			factor = 15
		}
		if = {
			limit = { 
				NOT = { has_character_flag = flag_moon_tea } 
				NOT = { 
					FROM = { mother = { is_consort = ROOT } }
				}				
			}
			if = {
				limit = { trait = depressed }
				random = {
					chance = 2
					death = {
						death_reason = death_suicide
					}
				}
			}
			if = {
				limit = { NOT = { trait = depressed } }
				random = {
					chance = 10
					add_trait = depressed
					hidden_tooltip = {
						character_event = {
							id = 38288 #Notify Depressed
						}
					}
				}
			}	
		}
		hidden_tooltip = {
			clr_character_flag = flag_moon_tea
			FROM = { mother = { reverse_remove_opinion = { who = ROOT modifier = opinion_using_moon_tea } } }
		}
	}
	option = {
		name = "EVTOPTB381" #Torture wet nurses and mid-wives
		trigger = {
			is_ruler = yes
			is_female = no
			FROM = { is_child_of = ROOT }
			NOT = { has_character_flag = flag_moon_tea } 
			
			trait = cruel
			OR = {
				trait = lunatic
				trait = paranoid
				trait = impaler
			}
			NOT = { trait = honorable }
			NOT = { trait = just }		
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 4
				trait = lunatic
			}
			modifier = {
				factor = 4
				trait = paranoid
			}
			modifier = {
				factor = 4
				trait = impaler
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 0.25
				trait = trusting
			}
		}
		tooltip_info = cruel
		custom_tooltip = {
			text = TOOLTIP381CRUEL
		}
		FROM = { 
			mother = {
				opinion = {
					who = ROOT
					modifier = opinion_cruel
				}
			}
		}	
		any_courtier = {
			limit = {
				age = 16
				NOT = { character = ROOT }
				NOT = { trait = incapable }
				NOT = { any_child = { character = FROM } }
			}
			opinion = {
				who = ROOT
				modifier = opinion_cruel
			}
		}
		prestige = 50
		piety = -50
		if = {
			limit = { NOT = { trait = lunatic } }
			random = {
				chance = 15
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
			}
		}
		hidden_tooltip = {
			liege = {
				if = {
					limit = { 
						ai = no 
						NOT = { character = ROOT }
					}
					character_event = { id = 382 }
				}	
			}
			any_realm_lord = {
				limit = { ai = no }
				character_event = { id = 382 }
			}
		}
		if = {
			limit = { ai = no }
			chronicle = {
				entry = CHRONICLE_TORTURED_WET_NURSES
			}
		}
		hidden_tooltip = {
			clr_character_flag = flag_moon_tea
			FROM = { mother = { reverse_remove_opinion = { who = ROOT modifier = opinion_using_moon_tea } } }
		}
	}
}
character_event = { #Inform realm wet nurses murdered
	id = 382
	picture = "GFX_evt_death"
	desc = "EVTDESC382"
	
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTA382"
	}
}
	
# Circumstances of conception were mysterious (AGOT)
# character_event = {
	# id = 395 #MERGED WITH BIRTH.990
	# picture = "GFX_evt_pregnancy"
	# is_triggered_only = yes
	
	# option = { name = "OK" }
# }
